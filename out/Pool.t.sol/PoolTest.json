{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BLOCK_NUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SEPOLIA_RPC_URL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract StakingRewards",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsToken",
      "outputs": [
        {
          "internalType": "contract LPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sepoliaFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract FT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_Deployment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_earned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_getBalanceOfContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_lastTimeRewardApplicable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_notifyRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_resetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_rewardPerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_setRewardsDuraton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_P_withdrawRewardToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260008054600160ff19918216811783556004805490921617905563f877cb1960e01b82526020608452600f60a4526e14d15413d3125057d49410d7d55493608a1b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f877cb199160e491606481865afa15801562000081573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000ab9190810190620000e5565b602590620000ba908262000249565b50348015620000c857600080fd5b5062000315565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000f957600080fd5b82516001600160401b03808211156200011157600080fd5b818501915085601f8301126200012657600080fd5b8151818111156200013b576200013b620000cf565b604051601f8201601f19908116603f01168101908382118183101715620001665762000166620000cf565b8160405282815288868487010111156200017f57600080fd5b600093505b82841015620001a3578484018601518185018701529285019262000184565b600086848301015280965050505050505092915050565b600181811c90821680620001cf57607f821691505b602082108103620001f057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024457600081815260208120601f850160051c810160208610156200021f5750805b601f850160051c820191505b8181101562000240578281556001016200022b565b5050505b505050565b81516001600160401b03811115620002655762000265620000cf565b6200027d81620002768454620001ba565b84620001f6565b602080601f831160018114620002b557600084156200029c5750858301515b600019600386901b1c1916600185901b17855562000240565b600085815260208120601f198616915b82811015620002e657888601518255948401946001909101908401620002c5565b5085821015620003055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6161af80620003256000396000f3fe60806040523480156200001157600080fd5b5060043610620001f55760003560e01c806385226c811162000119578063c09370a311620000af578063d994832b116200007a578063d994832b146200037f578063e20c9f711462000398578063e537155814620003a2578063fa7626d414620003ac57600080fd5b8063c09370a3146200034d578063c1f83bb31462000357578063d1af0c7d1462000361578063d82e3ad4146200037557600080fd5b8063b5508aa911620000f0578063b5508aa91462000314578063b6169f23146200031e578063ba414fa61462000328578063bd767065146200034357600080fd5b806385226c8114620002e7578063916a17c6146200030057806392244649146200030a57600080fd5b80633e5e3c23116200018f57806351427b73116200016657806351427b7314620002a65780635e0a7e9b14620002b057806366d9a9a014620002ba57806372f702f314620002d357600080fd5b80633e5e3c2314620002885780633f2efa0514620002925780633f7286f4146200029c57600080fd5b80630fc3a55f11620001d05780630fc3a55f146200021a57806316f0115b14620002245780631ed7831c14620002555780632aaf4f01146200026e57600080fd5b8063095b683e14620001fa5780630a9254e414620002065780630c4de8ba1462000210575b600080fd5b62000204620003ba565b005b6200020462000527565b620002046200087b565b6200020462000909565b601b5462000238906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6200025f62000a71565b6040516200024c9190620029a3565b620002796237aba481565b6040519081526020016200024c565b6200025f62000ad5565b6200020462000b37565b6200025f62000b79565b6200020462000bdb565b6200020462000cc1565b620002c462000e8d565b6040516200024c9190620029f2565b601c5462000238906001600160a01b031681565b620002f162000f80565b6040516200024c919062002afd565b620002c46200105a565b6200020462001144565b620002f1620014bb565b6200020462001595565b6200033262001794565b60405190151581526020016200024c565b62000204620018bf565b6200027960245481565b6200020462001c50565b601d5462000238906001600160a01b031681565b6200020462001d6a565b6200038962001e74565b6040516200024c919062002b63565b6200025f62001f0a565b6200020462001f6c565b600054620003329060ff1681565b602054620003d1906001600160a01b031662002217565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b1580156200042657600080fd5b505af11580156200043b573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152600a60048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b1580156200048657600080fd5b505af11580156200049b573d6000803e3d6000fd5b5050505062000525601b60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200051d919062002b7f565b600a62002365565b565b6040516371ee464d60e01b81526000805160206200615a833981519152906371ee464d9062000561906025906237aba49060040162002bd5565b6020604051808303816000875af115801562000581573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a7919062002b7f565b602455604051620005b890620028ea565b604051809103906000f080158015620005d5573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b0392909216918217905560405163792e11f560e01b815260048082015263792e11f5906024016000604051808303816000875af115801562000631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200065b919081019062002cca565b80516200067191601f91602090910190620028f8565b50601f60008154811062000689576200068962002d9d565b6000918252602091829020015481546001600160a01b0319166001600160a01b03909116179055601f80546001908110620006c857620006c862002d9d565b600091825260209091200154602180546001600160a01b0319166001600160a01b03909216919091179055601f805460029081106200070b576200070b62002d9d565b600091825260209091200154602280546001600160a01b0319166001600160a01b03909216919091179055601f805460039081106200074e576200074e62002d9d565b600091825260209091200154602380546001600160a01b0319166001600160a01b03909216919091179055604051620007879062002962565b604051809103906000f080158015620007a4573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620007d39062002970565b604051809103906000f080158015620007f0573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03928316908117909155601c5460405192169162000824906200297e565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000858573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b620008856200245c565b601b5460408051632296888560e01b815290516000926001600160a01b03169163229688859160048083019260209291908290030181865afa158015620008d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f6919062002b7f565b905062000906816103e862002365565b50565b620009136200245c565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b1580156200096857600080fd5b505af11580156200097d573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620009d257600080fd5b505af1158015620009e7573d6000803e3d6000fd5b5050601d546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a08231906024015b602060405180830381865afa15801562000a3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a62919062002b7f565b90506200090681602862002365565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000acb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000aac575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000acb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000aac575050505050905090565b62000b416200245c565b601b546020546040516246613160e11b81526001600160a01b0391821660048201526000929190911690628cc2629060240162000a1e565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000acb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000aac575050505050905090565b601b5460405163cc1a378f60e01b8152606460048201526001600160a01b039091169063cc1a378f90602401600060405180830381600087803b15801562000c2257600080fd5b505af115801562000c37573d6000803e3d6000fd5b5050505062000525601b60009054906101000a90046001600160a01b03166001600160a01b0316630fb5a6b46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cb9919062002b7f565b606462002365565b600060405162000cd19062002962565b604051809103906000f08015801562000cee573d6000803e3d6000fd5b509050600060405162000d019062002970565b604051809103906000f08015801562000d1e573d6000803e3d6000fd5b50601b54604051634e1f84df60e11b81526001600160a01b0385811660048301528084166024830152929350911690639c3f09be90604401600060405180830381600087803b15801562000d7157600080fd5b505af115801562000d86573d6000803e3d6000fd5b5050505062000e0f601b60009054906101000a90046001600160a01b03166001600160a01b03166372f702f36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e08919062002db3565b83620026e7565b601b546040805163d1af0c7d60e01b8152905162000e89926001600160a01b03169163d1af0c7d9160048083019260209291908290030181865afa15801562000e5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e82919062002db3565b82620026e7565b5050565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000f775760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000f5e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000f1f5790505b5050505050815250508152602001906001019062000eb1565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000f7757838290600052602060002001805462000fc69062002b99565b80601f016020809104026020016040519081016040528092919081815260200182805462000ff49062002b99565b8015620010455780601f10620010195761010080835404028352916020019162001045565b820191906000526020600020905b8154815290600101906020018083116200102757829003601f168201915b50505050508152602001906001019062000fa4565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000f775760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200112b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620010ec5790505b505050505081525050815260200190600101906200107e565b601c546020546040516340c10f1960e01b81526001600160a01b039182166004820152606460248201529116906340c10f1990604401600060405180830381600087803b1580156200119557600080fd5b505af1158015620011aa573d6000803e3d6000fd5b505060205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a833981519152925063ca669fa79150602401600060405180830381600087803b1580156200120357600080fd5b505af115801562001218573d6000803e3d6000fd5b5050601c54601b5460405163095ea7b360e01b81526001600160a01b039182166004820152600a60248201529116925063095ea7b391506044016020604051808303816000875af115801562001272573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001298919062002dd3565b5060205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b158015620012ee57600080fd5b505af115801562001303573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152600a60048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b1580156200134e57600080fd5b505af115801562001363573d6000803e3d6000fd5b505060205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a833981519152925063ca669fa79150602401600060405180830381600087803b158015620013bc57600080fd5b505af1158015620013d1573d6000803e3d6000fd5b5050601b54604051632e1a7d4d60e01b8152600560048201526001600160a01b039091169250632e1a7d4d9150602401600060405180830381600087803b1580156200141c57600080fd5b505af115801562001431573d6000803e3d6000fd5b5050505062000525601b60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200148d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014b3919062002b7f565b600562002365565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000f77578382906000526020600020018054620015019062002b99565b80601f01602080910402602001604051908101604052809291908181526020018280546200152f9062002b99565b8015620015805780601f10620015545761010080835404028352916020019162001580565b820191906000526020600020905b8154815290600101906020018083116200156257829003601f168201915b505050505081526020019060010190620014df565b6200159f6200245c565b601b54604080516380faa57d60e01b815290516000926001600160a01b0316916380faa57d9160048083019260209291908290030181865afa158015620015ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001610919062002b7f565b90506200161e814262002365565b6000805160206200615a83398151915263e5d6bf026200164042606462002df7565b6040518263ffffffff1660e01b81526004016200165f91815260200190565b600060405180830381600087803b1580156200167a57600080fd5b505af11580156200168f573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b03166380faa57d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620016e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200170d919062002b7f565b90506200090681601b60009054906101000a90046001600160a01b03166001600160a01b03166367d3b4886040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001768573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200178e919062002b7f565b62002365565b60008054610100900460ff1615620017b55750600054610100900460ff1690565b60006000805160206200615a8339815191523b15620018ba57604080516000805160206200615a833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200183c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162002e1f565b60408051601f1981840301815290829052620018589162002e52565b6000604051808303816000865af19150503d806000811462001897576040519150601f19603f3d011682016040523d82523d6000602084013e6200189c565b606091505b5091505080806020019051810190620018b6919062002dd3565b9150505b919050565b601b5460405163cc1a378f60e01b8152603260048201526001600160a01b039091169063cc1a378f90602401600060405180830381600087803b1580156200190657600080fd5b505af11580156200191b573d6000803e3d6000fd5b5050601d54601b546040516340c10f1960e01b81526001600160a01b0391821660048201526103e86024820152911692506340c10f199150604401600060405180830381600087803b1580156200197157600080fd5b505af115801562001986573d6000803e3d6000fd5b5050602054620019a292506001600160a01b0316905062002217565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b158015620019f757600080fd5b505af115801562001a0c573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152606460048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b15801562001a5757600080fd5b505af115801562001a6c573d6000803e3d6000fd5b5050601b54604051633c6b16ab60e01b8152606460048201526001600160a01b039091169250633c6b16ab9150602401600060405180830381600087803b15801562001ab757600080fd5b505af115801562001acc573d6000803e3d6000fd5b5050505062001b56601b60009054906101000a90046001600160a01b03166001600160a01b0316637b0a47ee6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b4e919062002b7f565b600262002365565b601b5460408051630cfa769160e31b8152905162001bd6926001600160a01b0316916367d3b4889160048083019260209291908290030181865afa15801562001ba3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bc9919062002b7f565b6200178e42603262002df7565b601b54604080516307519ab560e41b8152905162000525926001600160a01b031691637519ab509160048083019260209291908290030181865afa15801562001c23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c49919062002b7f565b4262002365565b601b546040805163cd3daf9d60e01b815290516000926001600160a01b03169163cd3daf9d9160048083019260209291908290030181865afa15801562001c9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cc1919062002b7f565b905062001cd081600062002365565b62001cda6200245c565b601b60009054906101000a90046001600160a01b03166001600160a01b031663cd3daf9d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001d2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d54919062002b7f565b9050620009068167058d15e17628000062002365565b601b54604080516372f702f360e01b8152905162001def926001600160a01b0316916372f702f39160048083019260209291908290030181865afa15801562001db7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ddd919062002db3565b601c546001600160a01b0316620026e7565b601b546040805163d1af0c7d60e01b8152905162000525926001600160a01b03169163d1af0c7d9160048083019260209291908290030181865afa15801562001e3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e62919062002db3565b601d546001600160a01b0316620026e7565b6025805462001e839062002b99565b80601f016020809104026020016040519081016040528092919081815260200182805462001eb19062002b99565b801562001f025780601f1062001ed65761010080835404028352916020019162001f02565b820191906000526020600020905b81548152906001019060200180831162001ee457829003601f168201915b505050505081565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000acb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000aac575050505050905090565b62001f766200245c565b60405163f28dceb360e01b815260206004820152601960248201527f7374696c6c2070726f6475637420726577617264546f6b656e0000000000000060448201526000805160206200615a8339815191529063f28dceb390606401600060405180830381600087803b15801562001fec57600080fd5b505af115801562002001573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663aa7a07e96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200205657600080fd5b505af11580156200206b573d6000803e3d6000fd5b506000805160206200615a833981519152925063e5d6bf02915062002094905042606462002df7565b6040518263ffffffff1660e01b8152600401620020b391815260200190565b600060405180830381600087803b158015620020ce57600080fd5b505af1158015620020e3573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663aa7a07e96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200213857600080fd5b505af11580156200214d573d6000803e3d6000fd5b5050601d54601b5460408051638da5cb5b60e01b81529051600095506001600160a01b0393841694506370a082319390921691638da5cb5b916004808201926020929091908290030181865afa158015620021ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021d2919062002db3565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620008d0573d6000803e3d6000fd5b601c546040516340c10f1960e01b81526001600160a01b03838116600483015260646024830152909116906340c10f1990604401600060405180830381600087803b1580156200226657600080fd5b505af11580156200227b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206200615a833981519152925063ca669fa79150602401600060405180830381600087803b158015620022d057600080fd5b505af1158015620022e5573d6000803e3d6000fd5b5050601c54601b5460405163095ea7b360e01b81526001600160a01b039182166004820152606460248201529116925063095ea7b391506044016020604051808303816000875af11580156200233f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e89919062002dd3565b80821462000e89577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620023d89060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162002411919062002e70565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200244a919062002ea9565b60405180910390a162000e89620027e1565b601b5460405163cc1a378f60e01b8152603260048201526001600160a01b039091169063cc1a378f90602401600060405180830381600087803b158015620024a357600080fd5b505af1158015620024b8573d6000803e3d6000fd5b5050601d54601b546040516340c10f1960e01b81526001600160a01b0391821660048201526103e86024820152911692506340c10f199150604401600060405180830381600087803b1580156200250e57600080fd5b505af115801562002523573d6000803e3d6000fd5b50506020546200253f92506001600160a01b0316905062002217565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b1580156200259457600080fd5b505af1158015620025a9573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152606460048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b158015620025f457600080fd5b505af115801562002609573d6000803e3d6000fd5b5050601b54604051633c6b16ab60e01b8152606460048201526001600160a01b039091169250633c6b16ab9150602401600060405180830381600087803b1580156200265457600080fd5b505af115801562002669573d6000803e3d6000fd5b506000805160206200615a833981519152925063e5d6bf02915062002692905042601462002df7565b6040518263ffffffff1660e01b8152600401620026b191815260200190565b600060405180830381600087803b158015620026cc57600080fd5b505af1158015620026e1573d6000803e3d6000fd5b50505050565b806001600160a01b0316826001600160a01b03161462000e89577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200276f9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620027a8919062002ed4565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516200244a919062002f19565b6000805160206200615a8339815191523b15620028d957604080516000805160206200615a833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262002874929160200162002e1f565b60408051601f1981840301815290829052620028909162002e52565b6000604051808303816000865af19150503d8060008114620028cf576040519150601f19603f3d011682016040523d82523d6000602084013e620028d4565b606091505b505050505b6000805461ff001916610100179055565b61069a8062002f4583390190565b82805482825590600052602060002090810192821562002950579160200282015b828111156200295057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062002919565b506200295e9291506200298c565b5090565b610eba80620035df83390190565b610eba806200449983390190565b610e07806200535383390190565b5b808211156200295e57600081556001016200298d565b6020808252825182820181905260009190848201906040850190845b81811015620029e65783516001600160a01b031683529284019291840191600101620029bf565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562002a9a57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562002a845783516001600160e01b0319168252928b019260019290920191908b019062002a58565b50978a0197955050509187019160010162002a1a565b50919998505050505050505050565b60005b8381101562002ac657818101518382015260200162002aac565b50506000910152565b6000815180845262002ae981602086016020860162002aa9565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002b5657603f1988860301845262002b4385835162002acf565b9450928501929085019060010162002b24565b5092979650505050505050565b60208152600062002b78602083018462002acf565b9392505050565b60006020828403121562002b9257600080fd5b5051919050565b600181811c9082168062002bae57607f821691505b60208210810362002bcf57634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c91508083168062002bf657607f831692505b6020808410820362002c1657634e487b7160e01b86526022600452602486fd5b604088018490526060880182801562002c38576001811462002c4f5762002c7c565b60ff198716825285151560051b8201975062002c7c565b60008c81526020902060005b8781101562002c765781548482015290860190840162002c5b565b83019850505b50509690960196909652509095945050505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200090657600080fd5b8051620018ba8162002ca7565b6000602080838503121562002cde57600080fd5b825167ffffffffffffffff8082111562002cf757600080fd5b818501915085601f83011262002d0c57600080fd5b81518181111562002d215762002d2162002c91565b8060051b604051601f19603f8301168101818110858211171562002d495762002d4962002c91565b60405291825284820192508381018501918883111562002d6857600080fd5b938501935b8285101562002d915762002d818562002cbd565b8452938501939285019262002d6d565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562002dc657600080fd5b815162002b788162002ca7565b60006020828403121562002de657600080fd5b8151801515811462002b7857600080fd5b8082018082111562002e1957634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160e01b031983168152815160009062002e4481600485016020870162002aa9565b919091016004019392505050565b6000825162002e6681846020870162002aa9565b9190910192915050565b60408152600062002e9b60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600062002e9b60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062002eff60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062002eff60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe6000805460ff19166001908117909155737109709ecfa91a80626ff3989d68f67f5b1dd12d6080526b75736572206164647265737360a01b60c052600c60a05260cc6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db7905534801561007357600080fd5b50608051610604610096600039600081816101e701526103da01526106046000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063792e11f51461005c578063b90a68fa14610085578063ba414fa6146100c2578063f82de7b0146100da578063fa7626d4146100ef575b600080fd5b61006f61006a366004610442565b6100fc565b60405161007c919061045b565b60405180910390f35b600180546040805160208082018490528251808303820181528284019384905280519101209093556001600160a01b03909116905260600161007c565b6100ca61028a565b604051901515815260200161007c565b6100ed6100e8366004610442565b6103b5565b005b6000546100ca9060ff1681565b606060008267ffffffffffffffff811115610119576101196104a8565b604051908082528060200260200182016040528015610142578160200160208202803683370190505b50905060005b83811015610283576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b691906104be565b60405163c88a5e6d60e01b81526001600160a01b03808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b15801561022d57600080fd5b505af1158015610241573d6000803e3d6000fd5b5050505080838381518110610258576102586104ee565b6001600160a01b0390921660209283029190910190910152508061027b8161051a565b915050610148565b5092915050565b60008054610100900460ff16156102aa5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103b05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610338917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610563565b60408051601f198184030181529082905261035291610587565b6000604051808303816000865af19150503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e610394565b606091505b50915050808060200190518101906103ac9190610593565b9150505b919050565b60006103c182436105b5565b6040516301f7b4f360e41b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631f7b4f3090602401600060405180830381600087803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b505050505050565b60006020828403121561045457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561049c5783516001600160a01b031683529284019291840191600101610477565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104d057600080fd5b81516001600160a01b03811681146104e757600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161052c5761052c610504565b5060010190565b6000815160005b81811015610554576020818501810151868301520161053a565b50600093019283525090919050565b6001600160e01b031983168152600061057f6004830184610533565b949350505050565b60006104e78284610533565b6000602082840312156105a557600080fd5b815180151581146104e757600080fd5b808201808211156105c8576105c8610504565b9291505056fea26469706673582212208a0f83b23614769d5cd0df4eb60489273952b61f1f82f254579f0c425670e6b164736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600881526020016727232a2a37b5b2b760c11b81525060405180604001604052806002815260200161119560f21b81525081600390816200005f91906200018c565b5060046200006e82826200018c565b5050506200008b620000856200009160201b60201c565b62000095565b62000258565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011257607f821691505b6020821081036200013357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620001625750805b601f850160051c820191505b8181101562000183578281556001016200016e565b5050505b505050565b81516001600160401b03811115620001a857620001a8620000e7565b620001c081620001b98454620000fd565b8462000139565b602080601f831160018114620001f85760008415620001df5750858301515b600019600386901b1c1916600185901b17855562000183565b600085815260208120601f198616915b82811015620002295788860151825594840194600190910190840162000208565b5085821015620002485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c5280620002686000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee5780639dc29fac146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a9c565b60405180910390f35b610136610131366004610b06565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b30565b610301565b6040516012815260200161011a565b610136610188366004610b06565b610325565b6101a061019b366004610b06565b610347565b005b61014a6101b0366004610b6c565b6001600160a01b031660009081526020819052604090205490565b6101a061035d565b6005546040516001600160a01b03909116815260200161011a565b61010d610371565b6101a0610204366004610b06565b610380565b610136610217366004610b06565b610392565b61013661022a366004610b06565b610412565b61014a61023d366004610b8e565b610420565b6101a0610250366004610b6c565b61044b565b60606003805461026490610bc1565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610bc1565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c4565b60019150505b92915050565b60003361030f8582856105e9565b61031a858585610663565b506001949350505050565b6000336102f58185856103388383610420565b6103429190610bfb565b6104c4565b61034f610807565b6103598282610861565b5050565b610365610807565b61036f6000610920565b565b60606004805461026490610bc1565b610388610807565b6103598282610972565b600033816103a08286610420565b9050838110156104055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031a82868684036104c4565b6000336102f5818585610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610453610807565b6001600160a01b0381166104b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fc565b6104c181610920565b50565b6001600160a01b0383166105265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166105875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f58484610420565b9050600019811461065d57818110156106505760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b61065d84848484036104c4565b50505050565b6001600160a01b0383166106c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166107295760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b038316600090815260208190526040902054818110156107a15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361065d565b6005546001600160a01b0316331461036f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fc565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b80600260008282546108c99190610bfb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109d25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fc565b6001600160a01b03821660009081526020819052604090205481811015610a465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105dc565b600060208083528351808285015260005b81811015610ac957858101830151858201604001528201610aad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b0157600080fd5b919050565b60008060408385031215610b1957600080fd5b610b2283610aea565b946020939093013593505050565b600080600060608486031215610b4557600080fd5b610b4e84610aea565b9250610b5c60208501610aea565b9150604084013590509250925092565b600060208284031215610b7e57600080fd5b610b8782610aea565b9392505050565b60008060408385031215610ba157600080fd5b610baa83610aea565b9150610bb860208401610aea565b90509250929050565b600181811c90821680610bd557607f821691505b602082108103610bf557634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102fb57634e487b7160e01b600052601160045260246000fdfea2646970667358221220a26e0c12674539c764f9fd5d0dae471febb7517ba2e0698e39bc60c13a6f0f5a64736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600781526020016636383a37b5b2b760c91b8152506040518060400160405280600381526020016213141560ea1b81525081600390816200005f91906200018c565b5060046200006e82826200018c565b5050506200008b620000856200009160201b60201c565b62000095565b62000258565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011257607f821691505b6020821081036200013357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620001625750805b601f850160051c820191505b8181101562000183578281556001016200016e565b5050505b505050565b81516001600160401b03811115620001a857620001a8620000e7565b620001c081620001b98454620000fd565b8462000139565b602080601f831160018114620001f85760008415620001df5750858301515b600019600386901b1c1916600185901b17855562000183565b600085815260208120601f198616915b82811015620002295788860151825594840194600190910190840162000208565b5085821015620002485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c5280620002686000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee5780639dc29fac146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a9c565b60405180910390f35b610136610131366004610b06565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b30565b610301565b6040516012815260200161011a565b610136610188366004610b06565b610325565b6101a061019b366004610b06565b610347565b005b61014a6101b0366004610b6c565b6001600160a01b031660009081526020819052604090205490565b6101a061035d565b6005546040516001600160a01b03909116815260200161011a565b61010d610371565b6101a0610204366004610b06565b610380565b610136610217366004610b06565b610392565b61013661022a366004610b06565b610412565b61014a61023d366004610b8e565b610420565b6101a0610250366004610b6c565b61044b565b60606003805461026490610bc1565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610bc1565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c4565b60019150505b92915050565b60003361030f8582856105e9565b61031a858585610663565b506001949350505050565b6000336102f58185856103388383610420565b6103429190610bfb565b6104c4565b61034f610807565b6103598282610861565b5050565b610365610807565b61036f6000610920565b565b60606004805461026490610bc1565b610388610807565b6103598282610972565b600033816103a08286610420565b9050838110156104055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031a82868684036104c4565b6000336102f5818585610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610453610807565b6001600160a01b0381166104b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fc565b6104c181610920565b50565b6001600160a01b0383166105265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166105875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f58484610420565b9050600019811461065d57818110156106505760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b61065d84848484036104c4565b50505050565b6001600160a01b0383166106c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166107295760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b038316600090815260208190526040902054818110156107a15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361065d565b6005546001600160a01b0316331461036f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fc565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b80600260008282546108c99190610bfb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109d25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fc565b6001600160a01b03821660009081526020819052604090205481811015610a465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105dc565b600060208083528351808285015260005b81811015610ac957858101830151858201604001528201610aad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b0157600080fd5b919050565b60008060408385031215610b1957600080fd5b610b2283610aea565b946020939093013593505050565b600080600060608486031215610b4557600080fd5b610b4e84610aea565b9250610b5c60208501610aea565b9150604084013590509250925092565b600060208284031215610b7e57600080fd5b610b8782610aea565b9392505050565b60008060408385031215610ba157600080fd5b610baa83610aea565b9150610bb860208401610aea565b90509250929050565b600181811c90821680610bd557607f821691505b602082108103610bf557634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102fb57634e487b7160e01b600052601160045260246000fdfea26469706673582212205104ccfc26f536ae3e8d87d30af804dfabbf91b7001037d91e2de542ae462db164736f6c63430008110033608060405234801561001057600080fd5b50604051610e07380380610e0783398101604081905261002f91610087565b600280546001600160a01b03199081163317909155600080546001600160a01b03948516908316179055600180549290931691161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b610d3e806100c96000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637519ab50116100c3578063a694fc3a1161007c578063a694fc3a14610295578063aa7a07e9146102a8578063cc1a378f146102b0578063cd3daf9d146102c3578063d1af0c7d146102cb578063df136d65146102de57600080fd5b80637519ab50146102355780637b0a47ee1461023e57806380faa57d146102475780638b8763471461024f5780638da5cb5b1461026f5780639c3f09be1461028257600080fd5b80632e1a7d4d116101155780632e1a7d4d146101b15780633c6b16ab146101c65780633d18b912146101d957806367d3b488146101e157806370a08231146101ea57806372f702f31461020a57600080fd5b80628cc262146101515780630700037d146101775780630fb5a6b41461019757806318160ddd146101a057806322968885146101a9575b600080fd5b61016461015f366004610bc9565b6102e7565b6040519081526020015b60405180910390f35b610164610185366004610bc9565b60096020526000908152604090205481565b61016460035481565b610164600a5481565b610164610364565b6101c46101bf366004610be4565b6103d6565b005b6101c46101d4366004610be4565b61052b565b6101c4610731565b61016460045481565b6101646101f8366004610bc9565b600b6020526000908152604090205481565b60005461021d906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61016460055481565b61016460065481565b6101646107f0565b61016461025d366004610bc9565b60086020526000908152604090205481565b60025461021d906001600160a01b031681565b6101c4610290366004610bfd565b6107fe565b6101c46102a3366004610be4565b610856565b6101c46109ab565b6101c46102be366004610be4565b610ab3565b610164610b33565b60015461021d906001600160a01b031681565b61016460075481565b6001600160a01b0381166000908152600960209081526040808320546008909252822054670de0b6b3a76400009061031d610b33565b6103279190610c46565b6001600160a01b0385166000908152600b602052604090205461034a9190610c59565b6103549190610c70565b61035e9190610c92565b92915050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610ca5565b905090565b336103df610b33565b6007556103ea6107f0565b6005556001600160a01b0381161561043157610405816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b600082116104735760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b60448201526064015b60405180910390fd5b336000908152600b602052604081208054849290610492908490610c46565b9250508190555081600a60008282546104ab9190610c46565b909155505060005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044015b6020604051808303816000875af1158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610cbe565b505050565b6002546001600160a01b031633146105555760405162461bcd60e51b815260040161046a90610ce0565b600061055f610b33565b60075561056a6107f0565b6005556001600160a01b038116156105b157610585816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b60045442106105cf576003546105c79083610c70565b60065561060b565b6000600654426004546105e29190610c46565b6105ec9190610c59565b6003549091506105fc8285610c92565b6106069190610c70565b600655505b60006006541161064f5760405162461bcd60e51b815260206004820152600f60248201526e07265776172642072617465203d203608c1b604482015260640161046a565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190610ca5565b6003546006546106cb9190610c59565b11156107195760405162461bcd60e51b815260206004820152601760248201527f72657761726420616d6f756e74203e2062616c616e6365000000000000000000604482015260640161046a565b6003546107269042610c92565b600455505042600555565b3361073a610b33565b6007556107456107f0565b6005556001600160a01b0381161561078c57610760816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b3360009081526009602052604090205480156107ec573360008181526009602052604080822091909155600154905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016104e3565b5050565b60006103d160045442610b94565b6002546001600160a01b031633146108285760405162461bcd60e51b815260040161046a90610ce0565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b3361085f610b33565b60075561086a6107f0565b6005556001600160a01b038116156108b157610885816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b600082116108ee5760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b604482015260640161046a565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610cbe565b50336000908152600b602052604081208054849290610989908490610c92565b9250508190555081600a60008282546109a29190610c92565b90915550505050565b6002546001600160a01b031633146109d55760405162461bcd60e51b815260040161046a90610ce0565b600454421015610a275760405162461bcd60e51b815260206004820152601960248201527f7374696c6c2070726f6475637420726577617264546f6b656e00000000000000604482015260640161046a565b6001546001600160a01b031663a9059cbb33610a41610364565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab09190610cbe565b50565b6002546001600160a01b03163314610add5760405162461bcd60e51b815260040161046a90610ce0565b4260045410610b2e5760405162461bcd60e51b815260206004820152601c60248201527f726577617264206475726174696f6e206e6f742066696e697368656400000000604482015260640161046a565b600355565b6000600a54600003610b46575060075490565b600a54600554610b546107f0565b610b5e9190610c46565b600654610b6b9190610c59565b610b7d90670de0b6b3a7640000610c59565b610b879190610c70565b6007546103d19190610c92565b600081831115610ba45781610ba6565b825b9392505050565b80356001600160a01b0381168114610bc457600080fd5b919050565b600060208284031215610bdb57600080fd5b610ba682610bad565b600060208284031215610bf657600080fd5b5035919050565b60008060408385031215610c1057600080fd5b610c1983610bad565b9150610c2760208401610bad565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035e5761035e610c30565b808202811582820484141761035e5761035e610c30565b600082610c8d57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561035e5761035e610c30565b600060208284031215610cb757600080fd5b5051919050565b600060208284031215610cd057600080fd5b81518015158114610ba657600080fd5b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b60408201526060019056fea26469706673582212200a59c6ba2aad6cdba9fb6fde427323d7ddc4f5e14909d9f135b88583862a714864736f6c634300081100330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212201c2d9485f4a659fb779ee272a63b87231c5de0dd08215977e2b8e9f8029b1d9364736f6c63430008110033",
    "sourceMap": "246:5041:87:-:0;;;;;1609:26:18;;;1631:4;-1:-1:-1;;1609:26:18;;;;;;;3228:44:21;;;;;;;;;-1:-1:-1;;;618:31:87;;216:2:91;618:31:87;198:21:91;255:2;235:18;228:30;-1:-1:-1;;;274:18:91;267:45;618:12:87;;;;329:18:91;;618:31:87;246:5041;618:12;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;618:31:87;;;;;;;;;;;;:::i;:::-;586:63;;;;;;:::i;:::-;;246:5041;;;;;;;;;;;;358:127:91;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:1042;570:6;601:2;644;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;687:16;;-1:-1:-1;;;;;752:14:91;;;749:34;;;779:1;776;769:12;749:34;817:6;806:9;802:22;792:32;;862:7;855:4;851:2;847:13;843:27;833:55;;884:1;881;874:12;833:55;913:2;907:9;935:2;931;928:10;925:36;;;941:18;;:::i;:::-;1016:2;1010:9;984:2;1070:13;;-1:-1:-1;;1066:22:91;;;1090:2;1062:31;1058:40;1046:53;;;1114:18;;;1134:22;;;1111:46;1108:72;;;1160:18;;:::i;:::-;1200:10;1196:2;1189:22;1235:2;1227:6;1220:18;1275:7;1270:2;1265;1261;1257:11;1253:20;1250:33;1247:53;;;1296:1;1293;1286:12;1247:53;1318:1;1309:10;;1328:129;1342:2;1339:1;1336:9;1328:129;;;1430:10;;;1426:19;;1420:26;1399:14;;;1395:23;;1388:59;1353:10;;;;1328:129;;;1499:1;1494:2;1489;1481:6;1477:15;1473:24;1466:35;1520:6;1510:16;;;;;;;;490:1042;;;;:::o;1537:380::-;1616:1;1612:12;;;;1659;;;1680:61;;1734:4;1726:6;1722:17;1712:27;;1680:61;1787:2;1779:6;1776:14;1756:18;1753:38;1750:161;;1833:10;1828:3;1824:20;1821:1;1814:31;1868:4;1865:1;1858:15;1896:4;1893:1;1886:15;1750:161;;1537:380;;;:::o;2048:545::-;2150:2;2145:3;2142:11;2139:448;;;2186:1;2211:5;2207:2;2200:17;2256:4;2252:2;2242:19;2326:2;2314:10;2310:19;2307:1;2303:27;2297:4;2293:38;2362:4;2350:10;2347:20;2344:47;;;-1:-1:-1;2385:4:91;2344:47;2440:2;2435:3;2431:12;2428:1;2424:20;2418:4;2414:31;2404:41;;2495:82;2513:2;2506:5;2503:13;2495:82;;;2558:17;;;2539:1;2528:13;2495:82;;;2499:3;;;2139:448;2048:545;;;:::o;2769:1352::-;2889:10;;-1:-1:-1;;;;;2911:30:91;;2908:56;;;2944:18;;:::i;:::-;2973:97;3063:6;3023:38;3055:4;3049:11;3023:38;:::i;:::-;3017:4;2973:97;:::i;:::-;3125:4;;3189:2;3178:14;;3206:1;3201:663;;;;3908:1;3925:6;3922:89;;;-1:-1:-1;3977:19:91;;;3971:26;3922:89;-1:-1:-1;;2726:1:91;2722:11;;;2718:24;2714:29;2704:40;2750:1;2746:11;;;2701:57;4024:81;;3171:944;;3201:663;1995:1;1988:14;;;2032:4;2019:18;;-1:-1:-1;;3237:20:91;;;3355:236;3369:7;3366:1;3363:14;3355:236;;;3458:19;;;3452:26;3437:42;;3550:27;;;;3518:1;3506:14;;;;3385:19;;3355:236;;;3359:3;3619:6;3610:7;3607:19;3604:201;;;3680:19;;;3674:26;-1:-1:-1;;3763:1:91;3759:14;;;3775:3;3755:24;3751:37;3747:42;3732:58;3717:74;;3604:201;-1:-1:-1;;;;;3851:1:91;3835:14;;;3831:22;3818:36;;-1:-1:-1;2769:1352:91:o;:::-;246:5041:87;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001f55760003560e01c806385226c811162000119578063c09370a311620000af578063d994832b116200007a578063d994832b146200037f578063e20c9f711462000398578063e537155814620003a2578063fa7626d414620003ac57600080fd5b8063c09370a3146200034d578063c1f83bb31462000357578063d1af0c7d1462000361578063d82e3ad4146200037557600080fd5b8063b5508aa911620000f0578063b5508aa91462000314578063b6169f23146200031e578063ba414fa61462000328578063bd767065146200034357600080fd5b806385226c8114620002e7578063916a17c6146200030057806392244649146200030a57600080fd5b80633e5e3c23116200018f57806351427b73116200016657806351427b7314620002a65780635e0a7e9b14620002b057806366d9a9a014620002ba57806372f702f314620002d357600080fd5b80633e5e3c2314620002885780633f2efa0514620002925780633f7286f4146200029c57600080fd5b80630fc3a55f11620001d05780630fc3a55f146200021a57806316f0115b14620002245780631ed7831c14620002555780632aaf4f01146200026e57600080fd5b8063095b683e14620001fa5780630a9254e414620002065780630c4de8ba1462000210575b600080fd5b62000204620003ba565b005b6200020462000527565b620002046200087b565b6200020462000909565b601b5462000238906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6200025f62000a71565b6040516200024c9190620029a3565b620002796237aba481565b6040519081526020016200024c565b6200025f62000ad5565b6200020462000b37565b6200025f62000b79565b6200020462000bdb565b6200020462000cc1565b620002c462000e8d565b6040516200024c9190620029f2565b601c5462000238906001600160a01b031681565b620002f162000f80565b6040516200024c919062002afd565b620002c46200105a565b6200020462001144565b620002f1620014bb565b6200020462001595565b6200033262001794565b60405190151581526020016200024c565b62000204620018bf565b6200027960245481565b6200020462001c50565b601d5462000238906001600160a01b031681565b6200020462001d6a565b6200038962001e74565b6040516200024c919062002b63565b6200025f62001f0a565b6200020462001f6c565b600054620003329060ff1681565b602054620003d1906001600160a01b031662002217565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b1580156200042657600080fd5b505af11580156200043b573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152600a60048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b1580156200048657600080fd5b505af11580156200049b573d6000803e3d6000fd5b5050505062000525601b60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200051d919062002b7f565b600a62002365565b565b6040516371ee464d60e01b81526000805160206200615a833981519152906371ee464d9062000561906025906237aba49060040162002bd5565b6020604051808303816000875af115801562000581573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a7919062002b7f565b602455604051620005b890620028ea565b604051809103906000f080158015620005d5573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b0392909216918217905560405163792e11f560e01b815260048082015263792e11f5906024016000604051808303816000875af115801562000631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200065b919081019062002cca565b80516200067191601f91602090910190620028f8565b50601f60008154811062000689576200068962002d9d565b6000918252602091829020015481546001600160a01b0319166001600160a01b03909116179055601f80546001908110620006c857620006c862002d9d565b600091825260209091200154602180546001600160a01b0319166001600160a01b03909216919091179055601f805460029081106200070b576200070b62002d9d565b600091825260209091200154602280546001600160a01b0319166001600160a01b03909216919091179055601f805460039081106200074e576200074e62002d9d565b600091825260209091200154602380546001600160a01b0319166001600160a01b03909216919091179055604051620007879062002962565b604051809103906000f080158015620007a4573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620007d39062002970565b604051809103906000f080158015620007f0573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03928316908117909155601c5460405192169162000824906200297e565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000858573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b620008856200245c565b601b5460408051632296888560e01b815290516000926001600160a01b03169163229688859160048083019260209291908290030181865afa158015620008d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f6919062002b7f565b905062000906816103e862002365565b50565b620009136200245c565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b1580156200096857600080fd5b505af11580156200097d573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620009d257600080fd5b505af1158015620009e7573d6000803e3d6000fd5b5050601d546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a08231906024015b602060405180830381865afa15801562000a3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a62919062002b7f565b90506200090681602862002365565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000acb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000aac575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000acb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000aac575050505050905090565b62000b416200245c565b601b546020546040516246613160e11b81526001600160a01b0391821660048201526000929190911690628cc2629060240162000a1e565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000acb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000aac575050505050905090565b601b5460405163cc1a378f60e01b8152606460048201526001600160a01b039091169063cc1a378f90602401600060405180830381600087803b15801562000c2257600080fd5b505af115801562000c37573d6000803e3d6000fd5b5050505062000525601b60009054906101000a90046001600160a01b03166001600160a01b0316630fb5a6b46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cb9919062002b7f565b606462002365565b600060405162000cd19062002962565b604051809103906000f08015801562000cee573d6000803e3d6000fd5b509050600060405162000d019062002970565b604051809103906000f08015801562000d1e573d6000803e3d6000fd5b50601b54604051634e1f84df60e11b81526001600160a01b0385811660048301528084166024830152929350911690639c3f09be90604401600060405180830381600087803b15801562000d7157600080fd5b505af115801562000d86573d6000803e3d6000fd5b5050505062000e0f601b60009054906101000a90046001600160a01b03166001600160a01b03166372f702f36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e08919062002db3565b83620026e7565b601b546040805163d1af0c7d60e01b8152905162000e89926001600160a01b03169163d1af0c7d9160048083019260209291908290030181865afa15801562000e5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e82919062002db3565b82620026e7565b5050565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000f775760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000f5e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000f1f5790505b5050505050815250508152602001906001019062000eb1565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000f7757838290600052602060002001805462000fc69062002b99565b80601f016020809104026020016040519081016040528092919081815260200182805462000ff49062002b99565b8015620010455780601f10620010195761010080835404028352916020019162001045565b820191906000526020600020905b8154815290600101906020018083116200102757829003601f168201915b50505050508152602001906001019062000fa4565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000f775760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200112b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620010ec5790505b505050505081525050815260200190600101906200107e565b601c546020546040516340c10f1960e01b81526001600160a01b039182166004820152606460248201529116906340c10f1990604401600060405180830381600087803b1580156200119557600080fd5b505af1158015620011aa573d6000803e3d6000fd5b505060205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a833981519152925063ca669fa79150602401600060405180830381600087803b1580156200120357600080fd5b505af115801562001218573d6000803e3d6000fd5b5050601c54601b5460405163095ea7b360e01b81526001600160a01b039182166004820152600a60248201529116925063095ea7b391506044016020604051808303816000875af115801562001272573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001298919062002dd3565b5060205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b158015620012ee57600080fd5b505af115801562001303573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152600a60048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b1580156200134e57600080fd5b505af115801562001363573d6000803e3d6000fd5b505060205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a833981519152925063ca669fa79150602401600060405180830381600087803b158015620013bc57600080fd5b505af1158015620013d1573d6000803e3d6000fd5b5050601b54604051632e1a7d4d60e01b8152600560048201526001600160a01b039091169250632e1a7d4d9150602401600060405180830381600087803b1580156200141c57600080fd5b505af115801562001431573d6000803e3d6000fd5b5050505062000525601b60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200148d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014b3919062002b7f565b600562002365565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000f77578382906000526020600020018054620015019062002b99565b80601f01602080910402602001604051908101604052809291908181526020018280546200152f9062002b99565b8015620015805780601f10620015545761010080835404028352916020019162001580565b820191906000526020600020905b8154815290600101906020018083116200156257829003601f168201915b505050505081526020019060010190620014df565b6200159f6200245c565b601b54604080516380faa57d60e01b815290516000926001600160a01b0316916380faa57d9160048083019260209291908290030181865afa158015620015ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001610919062002b7f565b90506200161e814262002365565b6000805160206200615a83398151915263e5d6bf026200164042606462002df7565b6040518263ffffffff1660e01b81526004016200165f91815260200190565b600060405180830381600087803b1580156200167a57600080fd5b505af11580156200168f573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b03166380faa57d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620016e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200170d919062002b7f565b90506200090681601b60009054906101000a90046001600160a01b03166001600160a01b03166367d3b4886040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001768573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200178e919062002b7f565b62002365565b60008054610100900460ff1615620017b55750600054610100900460ff1690565b60006000805160206200615a8339815191523b15620018ba57604080516000805160206200615a833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200183c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162002e1f565b60408051601f1981840301815290829052620018589162002e52565b6000604051808303816000865af19150503d806000811462001897576040519150601f19603f3d011682016040523d82523d6000602084013e6200189c565b606091505b5091505080806020019051810190620018b6919062002dd3565b9150505b919050565b601b5460405163cc1a378f60e01b8152603260048201526001600160a01b039091169063cc1a378f90602401600060405180830381600087803b1580156200190657600080fd5b505af11580156200191b573d6000803e3d6000fd5b5050601d54601b546040516340c10f1960e01b81526001600160a01b0391821660048201526103e86024820152911692506340c10f199150604401600060405180830381600087803b1580156200197157600080fd5b505af115801562001986573d6000803e3d6000fd5b5050602054620019a292506001600160a01b0316905062002217565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b158015620019f757600080fd5b505af115801562001a0c573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152606460048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b15801562001a5757600080fd5b505af115801562001a6c573d6000803e3d6000fd5b5050601b54604051633c6b16ab60e01b8152606460048201526001600160a01b039091169250633c6b16ab9150602401600060405180830381600087803b15801562001ab757600080fd5b505af115801562001acc573d6000803e3d6000fd5b5050505062001b56601b60009054906101000a90046001600160a01b03166001600160a01b0316637b0a47ee6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b4e919062002b7f565b600262002365565b601b5460408051630cfa769160e31b8152905162001bd6926001600160a01b0316916367d3b4889160048083019260209291908290030181865afa15801562001ba3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bc9919062002b7f565b6200178e42603262002df7565b601b54604080516307519ab560e41b8152905162000525926001600160a01b031691637519ab509160048083019260209291908290030181865afa15801562001c23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c49919062002b7f565b4262002365565b601b546040805163cd3daf9d60e01b815290516000926001600160a01b03169163cd3daf9d9160048083019260209291908290030181865afa15801562001c9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cc1919062002b7f565b905062001cd081600062002365565b62001cda6200245c565b601b60009054906101000a90046001600160a01b03166001600160a01b031663cd3daf9d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001d2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d54919062002b7f565b9050620009068167058d15e17628000062002365565b601b54604080516372f702f360e01b8152905162001def926001600160a01b0316916372f702f39160048083019260209291908290030181865afa15801562001db7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ddd919062002db3565b601c546001600160a01b0316620026e7565b601b546040805163d1af0c7d60e01b8152905162000525926001600160a01b03169163d1af0c7d9160048083019260209291908290030181865afa15801562001e3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e62919062002db3565b601d546001600160a01b0316620026e7565b6025805462001e839062002b99565b80601f016020809104026020016040519081016040528092919081815260200182805462001eb19062002b99565b801562001f025780601f1062001ed65761010080835404028352916020019162001f02565b820191906000526020600020905b81548152906001019060200180831162001ee457829003601f168201915b505050505081565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000acb576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000aac575050505050905090565b62001f766200245c565b60405163f28dceb360e01b815260206004820152601960248201527f7374696c6c2070726f6475637420726577617264546f6b656e0000000000000060448201526000805160206200615a8339815191529063f28dceb390606401600060405180830381600087803b15801562001fec57600080fd5b505af115801562002001573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663aa7a07e96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200205657600080fd5b505af11580156200206b573d6000803e3d6000fd5b506000805160206200615a833981519152925063e5d6bf02915062002094905042606462002df7565b6040518263ffffffff1660e01b8152600401620020b391815260200190565b600060405180830381600087803b158015620020ce57600080fd5b505af1158015620020e3573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663aa7a07e96040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200213857600080fd5b505af11580156200214d573d6000803e3d6000fd5b5050601d54601b5460408051638da5cb5b60e01b81529051600095506001600160a01b0393841694506370a082319390921691638da5cb5b916004808201926020929091908290030181865afa158015620021ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021d2919062002db3565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620008d0573d6000803e3d6000fd5b601c546040516340c10f1960e01b81526001600160a01b03838116600483015260646024830152909116906340c10f1990604401600060405180830381600087803b1580156200226657600080fd5b505af11580156200227b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206200615a833981519152925063ca669fa79150602401600060405180830381600087803b158015620022d057600080fd5b505af1158015620022e5573d6000803e3d6000fd5b5050601c54601b5460405163095ea7b360e01b81526001600160a01b039182166004820152606460248201529116925063095ea7b391506044016020604051808303816000875af11580156200233f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e89919062002dd3565b80821462000e89577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620023d89060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162002411919062002e70565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200244a919062002ea9565b60405180910390a162000e89620027e1565b601b5460405163cc1a378f60e01b8152603260048201526001600160a01b039091169063cc1a378f90602401600060405180830381600087803b158015620024a357600080fd5b505af1158015620024b8573d6000803e3d6000fd5b5050601d54601b546040516340c10f1960e01b81526001600160a01b0391821660048201526103e86024820152911692506340c10f199150604401600060405180830381600087803b1580156200250e57600080fd5b505af115801562002523573d6000803e3d6000fd5b50506020546200253f92506001600160a01b0316905062002217565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200615a8339815191529063ca669fa790602401600060405180830381600087803b1580156200259457600080fd5b505af1158015620025a9573d6000803e3d6000fd5b5050601b5460405163534a7e1d60e11b8152606460048201526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b158015620025f457600080fd5b505af115801562002609573d6000803e3d6000fd5b5050601b54604051633c6b16ab60e01b8152606460048201526001600160a01b039091169250633c6b16ab9150602401600060405180830381600087803b1580156200265457600080fd5b505af115801562002669573d6000803e3d6000fd5b506000805160206200615a833981519152925063e5d6bf02915062002692905042601462002df7565b6040518263ffffffff1660e01b8152600401620026b191815260200190565b600060405180830381600087803b158015620026cc57600080fd5b505af1158015620026e1573d6000803e3d6000fd5b50505050565b806001600160a01b0316826001600160a01b03161462000e89577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200276f9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620027a8919062002ed4565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516200244a919062002f19565b6000805160206200615a8339815191523b15620028d957604080516000805160206200615a833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262002874929160200162002e1f565b60408051601f1981840301815290829052620028909162002e52565b6000604051808303816000865af19150503d8060008114620028cf576040519150601f19603f3d011682016040523d82523d6000602084013e620028d4565b606091505b505050505b6000805461ff001916610100179055565b61069a8062002f4583390190565b82805482825590600052602060002090810192821562002950579160200282015b828111156200295057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062002919565b506200295e9291506200298c565b5090565b610eba80620035df83390190565b610eba806200449983390190565b610e07806200535383390190565b5b808211156200295e57600081556001016200298d565b6020808252825182820181905260009190848201906040850190845b81811015620029e65783516001600160a01b031683529284019291840191600101620029bf565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562002a9a57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562002a845783516001600160e01b0319168252928b019260019290920191908b019062002a58565b50978a0197955050509187019160010162002a1a565b50919998505050505050505050565b60005b8381101562002ac657818101518382015260200162002aac565b50506000910152565b6000815180845262002ae981602086016020860162002aa9565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002b5657603f1988860301845262002b4385835162002acf565b9450928501929085019060010162002b24565b5092979650505050505050565b60208152600062002b78602083018462002acf565b9392505050565b60006020828403121562002b9257600080fd5b5051919050565b600181811c9082168062002bae57607f821691505b60208210810362002bcf57634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c91508083168062002bf657607f831692505b6020808410820362002c1657634e487b7160e01b86526022600452602486fd5b604088018490526060880182801562002c38576001811462002c4f5762002c7c565b60ff198716825285151560051b8201975062002c7c565b60008c81526020902060005b8781101562002c765781548482015290860190840162002c5b565b83019850505b50509690960196909652509095945050505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200090657600080fd5b8051620018ba8162002ca7565b6000602080838503121562002cde57600080fd5b825167ffffffffffffffff8082111562002cf757600080fd5b818501915085601f83011262002d0c57600080fd5b81518181111562002d215762002d2162002c91565b8060051b604051601f19603f8301168101818110858211171562002d495762002d4962002c91565b60405291825284820192508381018501918883111562002d6857600080fd5b938501935b8285101562002d915762002d818562002cbd565b8452938501939285019262002d6d565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562002dc657600080fd5b815162002b788162002ca7565b60006020828403121562002de657600080fd5b8151801515811462002b7857600080fd5b8082018082111562002e1957634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160e01b031983168152815160009062002e4481600485016020870162002aa9565b919091016004019392505050565b6000825162002e6681846020870162002aa9565b9190910192915050565b60408152600062002e9b60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600062002e9b60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062002eff60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062002eff60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe6000805460ff19166001908117909155737109709ecfa91a80626ff3989d68f67f5b1dd12d6080526b75736572206164647265737360a01b60c052600c60a05260cc6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db7905534801561007357600080fd5b50608051610604610096600039600081816101e701526103da01526106046000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063792e11f51461005c578063b90a68fa14610085578063ba414fa6146100c2578063f82de7b0146100da578063fa7626d4146100ef575b600080fd5b61006f61006a366004610442565b6100fc565b60405161007c919061045b565b60405180910390f35b600180546040805160208082018490528251808303820181528284019384905280519101209093556001600160a01b03909116905260600161007c565b6100ca61028a565b604051901515815260200161007c565b6100ed6100e8366004610442565b6103b5565b005b6000546100ca9060ff1681565b606060008267ffffffffffffffff811115610119576101196104a8565b604051908082528060200260200182016040528015610142578160200160208202803683370190505b50905060005b83811015610283576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b691906104be565b60405163c88a5e6d60e01b81526001600160a01b03808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b15801561022d57600080fd5b505af1158015610241573d6000803e3d6000fd5b5050505080838381518110610258576102586104ee565b6001600160a01b0390921660209283029190910190910152508061027b8161051a565b915050610148565b5092915050565b60008054610100900460ff16156102aa5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103b05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610338917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610563565b60408051601f198184030181529082905261035291610587565b6000604051808303816000865af19150503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e610394565b606091505b50915050808060200190518101906103ac9190610593565b9150505b919050565b60006103c182436105b5565b6040516301f7b4f360e41b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631f7b4f3090602401600060405180830381600087803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b505050505050565b60006020828403121561045457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561049c5783516001600160a01b031683529284019291840191600101610477565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104d057600080fd5b81516001600160a01b03811681146104e757600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161052c5761052c610504565b5060010190565b6000815160005b81811015610554576020818501810151868301520161053a565b50600093019283525090919050565b6001600160e01b031983168152600061057f6004830184610533565b949350505050565b60006104e78284610533565b6000602082840312156105a557600080fd5b815180151581146104e757600080fd5b808201808211156105c8576105c8610504565b9291505056fea26469706673582212208a0f83b23614769d5cd0df4eb60489273952b61f1f82f254579f0c425670e6b164736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600881526020016727232a2a37b5b2b760c11b81525060405180604001604052806002815260200161119560f21b81525081600390816200005f91906200018c565b5060046200006e82826200018c565b5050506200008b620000856200009160201b60201c565b62000095565b62000258565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011257607f821691505b6020821081036200013357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620001625750805b601f850160051c820191505b8181101562000183578281556001016200016e565b5050505b505050565b81516001600160401b03811115620001a857620001a8620000e7565b620001c081620001b98454620000fd565b8462000139565b602080601f831160018114620001f85760008415620001df5750858301515b600019600386901b1c1916600185901b17855562000183565b600085815260208120601f198616915b82811015620002295788860151825594840194600190910190840162000208565b5085821015620002485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c5280620002686000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee5780639dc29fac146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a9c565b60405180910390f35b610136610131366004610b06565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b30565b610301565b6040516012815260200161011a565b610136610188366004610b06565b610325565b6101a061019b366004610b06565b610347565b005b61014a6101b0366004610b6c565b6001600160a01b031660009081526020819052604090205490565b6101a061035d565b6005546040516001600160a01b03909116815260200161011a565b61010d610371565b6101a0610204366004610b06565b610380565b610136610217366004610b06565b610392565b61013661022a366004610b06565b610412565b61014a61023d366004610b8e565b610420565b6101a0610250366004610b6c565b61044b565b60606003805461026490610bc1565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610bc1565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c4565b60019150505b92915050565b60003361030f8582856105e9565b61031a858585610663565b506001949350505050565b6000336102f58185856103388383610420565b6103429190610bfb565b6104c4565b61034f610807565b6103598282610861565b5050565b610365610807565b61036f6000610920565b565b60606004805461026490610bc1565b610388610807565b6103598282610972565b600033816103a08286610420565b9050838110156104055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031a82868684036104c4565b6000336102f5818585610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610453610807565b6001600160a01b0381166104b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fc565b6104c181610920565b50565b6001600160a01b0383166105265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166105875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f58484610420565b9050600019811461065d57818110156106505760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b61065d84848484036104c4565b50505050565b6001600160a01b0383166106c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166107295760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b038316600090815260208190526040902054818110156107a15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361065d565b6005546001600160a01b0316331461036f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fc565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b80600260008282546108c99190610bfb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109d25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fc565b6001600160a01b03821660009081526020819052604090205481811015610a465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105dc565b600060208083528351808285015260005b81811015610ac957858101830151858201604001528201610aad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b0157600080fd5b919050565b60008060408385031215610b1957600080fd5b610b2283610aea565b946020939093013593505050565b600080600060608486031215610b4557600080fd5b610b4e84610aea565b9250610b5c60208501610aea565b9150604084013590509250925092565b600060208284031215610b7e57600080fd5b610b8782610aea565b9392505050565b60008060408385031215610ba157600080fd5b610baa83610aea565b9150610bb860208401610aea565b90509250929050565b600181811c90821680610bd557607f821691505b602082108103610bf557634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102fb57634e487b7160e01b600052601160045260246000fdfea2646970667358221220a26e0c12674539c764f9fd5d0dae471febb7517ba2e0698e39bc60c13a6f0f5a64736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600781526020016636383a37b5b2b760c91b8152506040518060400160405280600381526020016213141560ea1b81525081600390816200005f91906200018c565b5060046200006e82826200018c565b5050506200008b620000856200009160201b60201c565b62000095565b62000258565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011257607f821691505b6020821081036200013357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620001625750805b601f850160051c820191505b8181101562000183578281556001016200016e565b5050505b505050565b81516001600160401b03811115620001a857620001a8620000e7565b620001c081620001b98454620000fd565b8462000139565b602080601f831160018114620001f85760008415620001df5750858301515b600019600386901b1c1916600185901b17855562000183565b600085815260208120601f198616915b82811015620002295788860151825594840194600190910190840162000208565b5085821015620002485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610c5280620002686000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee5780639dc29fac146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a9c565b60405180910390f35b610136610131366004610b06565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b30565b610301565b6040516012815260200161011a565b610136610188366004610b06565b610325565b6101a061019b366004610b06565b610347565b005b61014a6101b0366004610b6c565b6001600160a01b031660009081526020819052604090205490565b6101a061035d565b6005546040516001600160a01b03909116815260200161011a565b61010d610371565b6101a0610204366004610b06565b610380565b610136610217366004610b06565b610392565b61013661022a366004610b06565b610412565b61014a61023d366004610b8e565b610420565b6101a0610250366004610b6c565b61044b565b60606003805461026490610bc1565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610bc1565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c4565b60019150505b92915050565b60003361030f8582856105e9565b61031a858585610663565b506001949350505050565b6000336102f58185856103388383610420565b6103429190610bfb565b6104c4565b61034f610807565b6103598282610861565b5050565b610365610807565b61036f6000610920565b565b60606004805461026490610bc1565b610388610807565b6103598282610972565b600033816103a08286610420565b9050838110156104055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031a82868684036104c4565b6000336102f5818585610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610453610807565b6001600160a01b0381166104b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fc565b6104c181610920565b50565b6001600160a01b0383166105265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166105875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f58484610420565b9050600019811461065d57818110156106505760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b61065d84848484036104c4565b50505050565b6001600160a01b0383166106c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166107295760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b038316600090815260208190526040902054818110156107a15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361065d565b6005546001600160a01b0316331461036f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fc565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b80600260008282546108c99190610bfb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166109d25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fc565b6001600160a01b03821660009081526020819052604090205481811015610a465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fc565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105dc565b600060208083528351808285015260005b81811015610ac957858101830151858201604001528201610aad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b0157600080fd5b919050565b60008060408385031215610b1957600080fd5b610b2283610aea565b946020939093013593505050565b600080600060608486031215610b4557600080fd5b610b4e84610aea565b9250610b5c60208501610aea565b9150604084013590509250925092565b600060208284031215610b7e57600080fd5b610b8782610aea565b9392505050565b60008060408385031215610ba157600080fd5b610baa83610aea565b9150610bb860208401610aea565b90509250929050565b600181811c90821680610bd557607f821691505b602082108103610bf557634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102fb57634e487b7160e01b600052601160045260246000fdfea26469706673582212205104ccfc26f536ae3e8d87d30af804dfabbf91b7001037d91e2de542ae462db164736f6c63430008110033608060405234801561001057600080fd5b50604051610e07380380610e0783398101604081905261002f91610087565b600280546001600160a01b03199081163317909155600080546001600160a01b03948516908316179055600180549290931691161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b610d3e806100c96000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637519ab50116100c3578063a694fc3a1161007c578063a694fc3a14610295578063aa7a07e9146102a8578063cc1a378f146102b0578063cd3daf9d146102c3578063d1af0c7d146102cb578063df136d65146102de57600080fd5b80637519ab50146102355780637b0a47ee1461023e57806380faa57d146102475780638b8763471461024f5780638da5cb5b1461026f5780639c3f09be1461028257600080fd5b80632e1a7d4d116101155780632e1a7d4d146101b15780633c6b16ab146101c65780633d18b912146101d957806367d3b488146101e157806370a08231146101ea57806372f702f31461020a57600080fd5b80628cc262146101515780630700037d146101775780630fb5a6b41461019757806318160ddd146101a057806322968885146101a9575b600080fd5b61016461015f366004610bc9565b6102e7565b6040519081526020015b60405180910390f35b610164610185366004610bc9565b60096020526000908152604090205481565b61016460035481565b610164600a5481565b610164610364565b6101c46101bf366004610be4565b6103d6565b005b6101c46101d4366004610be4565b61052b565b6101c4610731565b61016460045481565b6101646101f8366004610bc9565b600b6020526000908152604090205481565b60005461021d906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61016460055481565b61016460065481565b6101646107f0565b61016461025d366004610bc9565b60086020526000908152604090205481565b60025461021d906001600160a01b031681565b6101c4610290366004610bfd565b6107fe565b6101c46102a3366004610be4565b610856565b6101c46109ab565b6101c46102be366004610be4565b610ab3565b610164610b33565b60015461021d906001600160a01b031681565b61016460075481565b6001600160a01b0381166000908152600960209081526040808320546008909252822054670de0b6b3a76400009061031d610b33565b6103279190610c46565b6001600160a01b0385166000908152600b602052604090205461034a9190610c59565b6103549190610c70565b61035e9190610c92565b92915050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610ca5565b905090565b336103df610b33565b6007556103ea6107f0565b6005556001600160a01b0381161561043157610405816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b600082116104735760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b60448201526064015b60405180910390fd5b336000908152600b602052604081208054849290610492908490610c46565b9250508190555081600a60008282546104ab9190610c46565b909155505060005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044015b6020604051808303816000875af1158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610cbe565b505050565b6002546001600160a01b031633146105555760405162461bcd60e51b815260040161046a90610ce0565b600061055f610b33565b60075561056a6107f0565b6005556001600160a01b038116156105b157610585816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b60045442106105cf576003546105c79083610c70565b60065561060b565b6000600654426004546105e29190610c46565b6105ec9190610c59565b6003549091506105fc8285610c92565b6106069190610c70565b600655505b60006006541161064f5760405162461bcd60e51b815260206004820152600f60248201526e07265776172642072617465203d203608c1b604482015260640161046a565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190610ca5565b6003546006546106cb9190610c59565b11156107195760405162461bcd60e51b815260206004820152601760248201527f72657761726420616d6f756e74203e2062616c616e6365000000000000000000604482015260640161046a565b6003546107269042610c92565b600455505042600555565b3361073a610b33565b6007556107456107f0565b6005556001600160a01b0381161561078c57610760816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b3360009081526009602052604090205480156107ec573360008181526009602052604080822091909155600154905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016104e3565b5050565b60006103d160045442610b94565b6002546001600160a01b031633146108285760405162461bcd60e51b815260040161046a90610ce0565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b3361085f610b33565b60075561086a6107f0565b6005556001600160a01b038116156108b157610885816102e7565b6001600160a01b0382166000908152600960209081526040808320939093556007546008909152919020555b600082116108ee5760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b604482015260640161046a565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610cbe565b50336000908152600b602052604081208054849290610989908490610c92565b9250508190555081600a60008282546109a29190610c92565b90915550505050565b6002546001600160a01b031633146109d55760405162461bcd60e51b815260040161046a90610ce0565b600454421015610a275760405162461bcd60e51b815260206004820152601960248201527f7374696c6c2070726f6475637420726577617264546f6b656e00000000000000604482015260640161046a565b6001546001600160a01b031663a9059cbb33610a41610364565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab09190610cbe565b50565b6002546001600160a01b03163314610add5760405162461bcd60e51b815260040161046a90610ce0565b4260045410610b2e5760405162461bcd60e51b815260206004820152601c60248201527f726577617264206475726174696f6e206e6f742066696e697368656400000000604482015260640161046a565b600355565b6000600a54600003610b46575060075490565b600a54600554610b546107f0565b610b5e9190610c46565b600654610b6b9190610c59565b610b7d90670de0b6b3a7640000610c59565b610b879190610c70565b6007546103d19190610c92565b600081831115610ba45781610ba6565b825b9392505050565b80356001600160a01b0381168114610bc457600080fd5b919050565b600060208284031215610bdb57600080fd5b610ba682610bad565b600060208284031215610bf657600080fd5b5035919050565b60008060408385031215610c1057600080fd5b610c1983610bad565b9150610c2760208401610bad565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035e5761035e610c30565b808202811582820484141761035e5761035e610c30565b600082610c8d57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561035e5761035e610c30565b600060208284031215610cb757600080fd5b5051919050565b600060208284031215610cd057600080fd5b81518015158114610ba657600080fd5b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b60408201526060019056fea26469706673582212200a59c6ba2aad6cdba9fb6fde427323d7ddc4f5e14909d9f135b88583862a714864736f6c634300081100330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212201c2d9485f4a659fb779ee272a63b87231c5de0dd08215977e2b8e9f8029b1d9364736f6c63430008110033",
    "sourceMap": "246:5041:87:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:170;;;:::i;:::-;;708:441;;;:::i;3904:208::-;;;:::i;3044:248::-;;;:::i;279:26::-;;;;;-1:-1:-1;;;;;279:26:87;;;;;;-1:-1:-1;;;;;201:32:91;;;183:51;;171:2;156:18;279:26:87;;;;;;;;2229:136:24;;;:::i;:::-;;;;;;;:::i;656:43:87:-;;692:7;656:43;;;;;1220:25:91;;;1208:2;1193:18;656:43:87;1074:177:91;3018:135:24;;;:::i;2859:177:87:-;;;:::i;2711:143:24:-;;;:::i;3300:131:87:-;;;:::i;1999:362::-;;;:::i;2523:180:24:-;;;:::i;:::-;;;;;;;:::i;312:22:87:-;;;;;-1:-1:-1;;;;;312:22:87;;;2373:142:24;;;:::i;:::-;;;;;;;:::i;2862:148::-;;;:::i;2547:304:87:-;;;:::i;1926:143:24:-;;;:::i;1353:355:87:-;;;:::i;1865:600:18:-;;;:::i;:::-;;;4552:14:91;;4545:22;4527:41;;4515:2;4500:18;1865:600:18;4387:187:91;3439:457:87;;;:::i;553:26::-;;;;;;1716:275;;;:::i;341:27::-;;;;;-1:-1:-1;;;;;341:27:87;;;1157:188;;;:::i;586:63::-;;;:::i;:::-;;;;;;;:::i;2077:144:24:-;;;:::i;4120:388:87:-;;;:::i;1609:26:18:-;;;;;;;;;2369:170:87;2431:5;;2411:26;;-1:-1:-1;;;;;2431:5:87;2411:19;:26::i;:::-;2457:5;;2448:15;;-1:-1:-1;;;2448:15:87;;-1:-1:-1;;;;;2457:5:87;;;2448:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;2448:8:87;;;156:18:91;;2448:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2474:4:87;;:14;;-1:-1:-1;;;2474:14:87;;2485:2;2474:14;;;1220:25:91;-1:-1:-1;;;;;2474:4:87;;;;-1:-1:-1;2474:10:87;;-1:-1:-1;1193:18:91;;2474:14:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:32;2508:4;;;;;;;;;-1:-1:-1;;;;;2508:4:87;-1:-1:-1;;;;;2508:16:87;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2528:2;2499:8;:32::i;:::-;2369:170::o;708:441::-;757:47;;-1:-1:-1;;;757:47:87;;-1:-1:-1;;;;;;;;;;;757:19:87;;;:47;;777:15;;692:7;;757:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:11;:61;825:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:5:87;:19;;-1:-1:-1;;;;;;817:19:87;-1:-1:-1;;;;;817:19:87;;;;;;;;;855:20;;-1:-1:-1;;;855:20:87;;873:1;855:20;;;1220:25:91;855:17:87;;1193:18:91;;855:20:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;855:20:87;;;;;;;;;;;;:::i;:::-;847:28;;;;:5;;:28;;;;;;:::i;:::-;;894:5;900:1;894:8;;;;;;;;:::i;:::-;;;;;;;;;;;;886:16;;-1:-1:-1;;;;;;886:16:87;-1:-1:-1;;;;;894:8:87;;;886:16;;;919:5;:8;;894;;919;;;;;;:::i;:::-;;;;;;;;;;;913:3;:14;;-1:-1:-1;;;;;;913:14:87;-1:-1:-1;;;;;919:8:87;;;913:14;;;;;;948:5;:8;;954:1;;948:8;;;;;;:::i;:::-;;;;;;;;;;;938:7;:18;;-1:-1:-1;;;;;;938:18:87;-1:-1:-1;;;;;948:8:87;;;938:18;;;;;;976:5;:8;;982:1;;976:8;;;;;;:::i;:::-;;;;;;;;;;;967:6;:17;;-1:-1:-1;;;;;;967:17:87;-1:-1:-1;;;;;976:8:87;;;967:17;;;;;;1012:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;997:12:87;:23;;-1:-1:-1;;;;;;997:23:87;-1:-1:-1;;;;;997:23:87;;;;;;;;;;1046:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1031:12:87;:28;;-1:-1:-1;;;;;;1031:28:87;-1:-1:-1;;;;;1031:28:87;;;;;;;;;1104:12;;1077:64;;1104:12;;;1077:64;;;:::i;:::-;-1:-1:-1;;;;;9565:15:91;;;9547:34;;9617:15;;9612:2;9597:18;;9590:43;9497:2;9482:18;1077:64:87;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1070:4:87;:71;;-1:-1:-1;;;;;;1070:71:87;-1:-1:-1;;;;;1070:71:87;;;;;;;;;;708:441::o;3904:208::-;3996:16;:14;:16::i;:::-;4043:4;;:27;;;-1:-1:-1;;;4043:27:87;;;;4025:15;;-1:-1:-1;;;;;4043:4:87;;:25;;:27;;;;;;;;;;;;;;:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4025:45;;4081:23;4090:7;4099:4;4081:8;:23::i;:::-;3950:162;3904:208::o;3044:248::-;3125:16;:14;:16::i;:::-;3161:5;;3152:15;;-1:-1:-1;;;3152:15:87;;-1:-1:-1;;;;;3161:5:87;;;3152:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;3152:8:87;;;156:18:91;;3152:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3178:4;;;;;;;;;-1:-1:-1;;;;;3178:4:87;-1:-1:-1;;;;;3178:14:87;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3223:12:87;;3246:5;;3223:29;;-1:-1:-1;;;3223:29:87;;-1:-1:-1;;;;;3246:5:87;;;3223:29;;;183:51:91;3205:15:87;;-1:-1:-1;3223:12:87;;;-1:-1:-1;3223:22:87;;156:18:91;;3223:29:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3205:47;;3263:21;3272:7;3281:2;3263:8;:21::i;2229:136:24:-;2276:33;2341:16;2322:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2322:35:24;;;;;;;;;;;;;;;;;;;;;;;2229:136;:::o;3018:135::-;3064:33;3129:16;3110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3110:35:24;;;;;;;;;;;;;;;;;;;;;;3018:135;:::o;2859:177:87:-;2937:16;:14;:16::i;:::-;2981:4;;2993:5;;2981:18;;-1:-1:-1;;;2981:18:87;;-1:-1:-1;;;;;2993:5:87;;;2981:18;;;183:51:91;2966:12:87;;2981:4;;;;;:11;;156:18:91;;2981::87;14:226:91;2711:143:24;2759:35;2828:18;2807:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2807:39:24;;;;;;;;;;;;;;;;;;;;;;2711:143;:::o;3300:131:87:-;3354:4;;:28;;-1:-1:-1;;;3354:28:87;;3378:3;3354:28;;;1220:25:91;-1:-1:-1;;;;;3354:4:87;;;;:23;;1193:18:91;;3354:28:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3393:30;3402:4;;;;;;;;;-1:-1:-1;;;;;3402:4:87;-1:-1:-1;;;;;3402:13:87;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3419:3;3393:8;:30::i;1999:362::-;2046:18;2067:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2046:29;;2086:23;2112:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2136:4:87;;:67;;-1:-1:-1;;;2136:67:87;;-1:-1:-1;;;;;9565:15:91;;;2136:67:87;;;9547:34:91;9617:15;;;9597:18;;;9590:43;2086:39:87;;-1:-1:-1;2136:4:87;;;:15;;9482:18:91;;2136:67:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2214:64;2231:4;;;;;;;;;-1:-1:-1;;;;;2231:4:87;-1:-1:-1;;;;;2231:17:87;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2261:15;2214:8;:64::i;:::-;2306:4;;:19;;;-1:-1:-1;;;2306:19:87;;;;2289:64;;-1:-1:-1;;;;;2306:4:87;;:17;;:19;;;;;;;;;;;;;;:4;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2336:15;2289:8;:64::i;:::-;2035:326;;1999:362::o;2523:180:24:-;2579:48;2669:26;2640:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2640:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2640:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2523:180;:::o;2373:142::-;2421:34;2489:18;2468:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2862:148;2910:40;2984:18;2963:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2963:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2963:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2547:304:87;2592:12;;2610:5;;2592:29;;-1:-1:-1;;;2592:29:87;;-1:-1:-1;;;;;2610:5:87;;;2592:29;;;10300:51:91;2617:3:87;10367:18:91;;;10360:34;2592:12:87;;;:17;;10273:18:91;;2592:29:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2641:5:87;;2632:15;;-1:-1:-1;;;2632:15:87;;-1:-1:-1;;;;;2641:5:87;;;2632:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;2632:8:87;-1:-1:-1;2632:8:87;;-1:-1:-1;156:18:91;;2632:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2658:12:87;;2687:4;;2658:39;;-1:-1:-1;;;2658:39:87;;-1:-1:-1;;;;;2687:4:87;;;2658:39;;;10300:51:91;2694:2:87;10367:18:91;;;10360:34;2658:12:87;;;-1:-1:-1;2658:20:87;;-1:-1:-1;10273:18:91;;2658:39:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2717:5:87;;2708:15;;-1:-1:-1;;;2708:15:87;;-1:-1:-1;;;;;2717:5:87;;;2708:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;2708:8:87;;;156:18:91;;2708:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2734:4:87;;:14;;-1:-1:-1;;;2734:14:87;;2745:2;2734:14;;;1220:25:91;-1:-1:-1;;;;;2734:4:87;;;;-1:-1:-1;2734:10:87;;-1:-1:-1;1193:18:91;;2734:14:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2768:5:87;;2759:15;;-1:-1:-1;;;2759:15:87;;-1:-1:-1;;;;;2768:5:87;;;2759:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;2759:8:87;-1:-1:-1;2759:8:87;;-1:-1:-1;156:18:91;;2759:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2785:4:87;;:16;;-1:-1:-1;;;2785:16:87;;2799:1;2785:16;;;1220:25:91;-1:-1:-1;;;;;2785:4:87;;;;-1:-1:-1;2785:13:87;;-1:-1:-1;1193:18:91;;2785:16:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:31;2821:4;;;;;;;;;-1:-1:-1;;;;;2821:4:87;-1:-1:-1;;;;;2821:16:87;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2841:1;2812:8;:31::i;1926:143:24:-;1975:34;2043:18;2022:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:355:87;1449:16;:14;:16::i;:::-;1493:4;;:31;;;-1:-1:-1;;;1493:31:87;;;;1478:12;;-1:-1:-1;;;;;1493:4:87;;:29;;:31;;;;;;;;;;;;;;:4;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1478:46;;1535:31;1544:4;1550:15;1535:8;:31::i;:::-;-1:-1:-1;;;;;;;;;;;1579:7:87;1587:21;:15;1605:3;1587:21;:::i;:::-;1579:30;;;;;;;;;;;;;1220:25:91;;1208:2;1193:18;;1074:177;1579:30:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:4;;;;;;;;;-1:-1:-1;;;;;1627:4:87;-1:-1:-1;;;;;1627:29:87;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1620:38;;1669:31;1678:4;1684;;;;;;;;;-1:-1:-1;;;;;1684:4:87;-1:-1:-1;;;;;1684:13:87;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1669:8;:31::i;1865:600:18:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:18;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3065:55:18;3148:16;2031:382;;2251:43;;;-1:-1:-1;;;;;;;;;;;2251:43:18;;;10300:51:91;;;-1:-1:-1;;;10367:18:91;;;10360:34;2251:43:18;;;;;;;;;10273:18:91;;;2251:43:18;;;-1:-1:-1;;1712:64:18;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:18;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:18:o;3439:457:87:-;3529:4;;:27;;-1:-1:-1;;;3529:27:87;;3553:2;3529:27;;;1220:25:91;-1:-1:-1;;;;;3529:4:87;;;;:23;;1193:18:91;;3529:27:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3567:12:87;;3593:4;;3567:38;;-1:-1:-1;;;3567:38:87;;-1:-1:-1;;;;;3593:4:87;;;3567:38;;;10300:51:91;3600:4:87;10367:18:91;;;10360:34;3567:12:87;;;-1:-1:-1;3567:17:87;;-1:-1:-1;10273:18:91;;3567:38:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3636:5:87;;3616:26;;-1:-1:-1;;;;;;3636:5:87;;-1:-1:-1;3616:19:87;:26::i;:::-;3662:5;;3653:15;;-1:-1:-1;;;3653:15:87;;-1:-1:-1;;;;;3662:5:87;;;3653:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;3653:8:87;;;156:18:91;;3653:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3679:4:87;;:15;;-1:-1:-1;;;3679:15:87;;3690:3;3679:15;;;1220:25:91;-1:-1:-1;;;;;3679:4:87;;;;-1:-1:-1;3679:10:87;;-1:-1:-1;1193:18:91;;3679:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3707:4:87;;:28;;-1:-1:-1;;;3707:28:87;;3731:3;3707:28;;;1220:25:91;-1:-1:-1;;;;;3707:4:87;;;;-1:-1:-1;3707:23:87;;-1:-1:-1;1193:18:91;;3707:28:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3746:30;3755:4;;;;;;;;;-1:-1:-1;;;;;3755:4:87;-1:-1:-1;;;;;3755:15:87;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3774:1;3746:8;:30::i;:::-;3796:4;;:15;;;-1:-1:-1;;;3796:15:87;;;;3787:47;;-1:-1:-1;;;;;3796:4:87;;:13;;:15;;;;;;;;;;;;;;:4;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3813:20;:15;3831:2;3813:20;:::i;3787:47::-;3854:4;;:16;;;-1:-1:-1;;;3854:16:87;;;;3845:43;;-1:-1:-1;;;;;3854:4:87;;:14;;:16;;;;;;;;;;;;;;:4;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3872:15;3845:8;:43::i;1716:275::-;1786:4;;:21;;;-1:-1:-1;;;1786:21:87;;;;1767:16;;-1:-1:-1;;;;;1786:4:87;;:19;;:21;;;;;;;;;;;;;;:4;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1767:40;;1818:21;1827:8;1837:1;1818:8;:21::i;:::-;1887:16;:14;:16::i;:::-;1927:4;;;;;;;;;-1:-1:-1;;;;;1927:4:87;-1:-1:-1;;;;;1927:19:87;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1916:32;;1959:24;1968:8;1978:4;1959:8;:24::i;1157:188::-;1221:4;;:19;;;-1:-1:-1;;;1221:19:87;;;;1204:61;;-1:-1:-1;;;;;1221:4:87;;:17;;:19;;;;;;;;;;;;;;:4;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:12;;-1:-1:-1;;;;;1251:12:87;1204:8;:61::i;:::-;1293:4;;:19;;;-1:-1:-1;;;1293:19:87;;;;1276:61;;-1:-1:-1;;;;;1293:4:87;;:17;;:19;;;;;;;;;;;;;;:4;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1323:12;;-1:-1:-1;;;;;1323:12:87;1276:8;:61::i;586:63::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2077:144:24:-;2126:35;2195:18;2174:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2174:39:24;;;;;;;;;;;;;;;;;;;;;;2077:144;:::o;4120:388:87:-;4211:16;:14;:16::i;:::-;4240:44;;-1:-1:-1;;;4240:44:87;;13034:2:91;4240:44:87;;;13016:21:91;13073:2;13053:18;;;13046:30;13112:27;13092:18;;;13085:55;-1:-1:-1;;;;;;;;;;;4240:15:87;;;13157:18:91;;4240:44:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4295:4;;;;;;;;;-1:-1:-1;;;;;4295:4:87;-1:-1:-1;;;;;4295:24:87;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;4334:7:87;-1:-1:-1;4334:7:87;;-1:-1:-1;4342:21:87;;-1:-1:-1;4342:15:87;4360:3;4342:21;:::i;:::-;4334:30;;;;;;;;;;;;;1220:25:91;;1208:2;1193:18;;1074:177;4334:30:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:4;;;;;;;;;-1:-1:-1;;;;;4375:4:87;-1:-1:-1;;;;;4375:24:87;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4430:12:87;;4453:4;;:12;;;-1:-1:-1;;;4453:12:87;;;;4412:15;;-1:-1:-1;;;;;;4430:12:87;;;;-1:-1:-1;4430:22:87;;4453:4;;;;:10;;:12;;;;;;;;;;;;;;;:4;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4430:36;;-1:-1:-1;;;;;;4430:36:87;;;;;;;-1:-1:-1;;;;;201:32:91;;;4430:36:87;;;183:51:91;156:18;;4430:36:87;;;;;;;;;;;;;;;;;;;;;;4516:174;4578:12;;:28;;-1:-1:-1;;;4578:28:87;;-1:-1:-1;;;;;10318:32:91;;;4578:28:87;;;10300:51:91;4602:3:87;10367:18:91;;;10360:34;4578:12:87;;;;:17;;10273:18:91;;4578:28:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4617:14:87;;-1:-1:-1;;;4617:14:87;;-1:-1:-1;;;;;201:32:91;;4617:14:87;;;183:51:91;-1:-1:-1;;;;;;;;;;;4617:8:87;-1:-1:-1;4617:8:87;;-1:-1:-1;156:18:91;;4617:14:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4642:12:87;;4671:4;;4642:40;;-1:-1:-1;;;4642:40:87;;-1:-1:-1;;;;;4671:4:87;;;4642:40;;;10300:51:91;4678:3:87;10367:18:91;;;10360:34;4642:12:87;;;-1:-1:-1;4642:20:87;;-1:-1:-1;10273:18:91;;4642:40:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5365:269:18:-;5428:1;5423;:6;5419:208;;5451:41;;;;;13652:2:91;13634:21;;;13691:2;13671:18;;;13664:30;13730:34;13725:2;13710:18;;13703:62;-1:-1:-1;;;13796:2:91;13781:18;;13774:32;13838:3;13823:19;;13450:398;5451:41:18;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;:::-;;;;;;;;5609:6;:4;:6::i;4698:586:87:-;4778:4;;:27;;-1:-1:-1;;;4778:27:87;;4802:2;4778:27;;;1220:25:91;-1:-1:-1;;;;;4778:4:87;;;;:23;;1193:18:91;;4778:27:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4816:12:87;;4842:4;;4816:38;;-1:-1:-1;;;4816:38:87;;-1:-1:-1;;;;;4842:4:87;;;4816:38;;;10300:51:91;4849:4:87;10367:18:91;;;10360:34;4816:12:87;;;-1:-1:-1;4816:17:87;;-1:-1:-1;10273:18:91;;4816:38:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4885:5:87;;4865:26;;-1:-1:-1;;;;;;4885:5:87;;-1:-1:-1;4865:19:87;:26::i;:::-;4911:5;;4902:15;;-1:-1:-1;;;4902:15:87;;-1:-1:-1;;;;;4911:5:87;;;4902:15;;;183:51:91;-1:-1:-1;;;;;;;;;;;4902:8:87;;;156:18:91;;4902:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4928:4:87;;:15;;-1:-1:-1;;;4928:15:87;;4939:3;4928:15;;;1220:25:91;-1:-1:-1;;;;;4928:4:87;;;;-1:-1:-1;4928:10:87;;-1:-1:-1;1193:18:91;;4928:15:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4954:4:87;;:28;;-1:-1:-1;;;4954:28:87;;4978:3;4954:28;;;1220:25:91;-1:-1:-1;;;;;4954:4:87;;;;-1:-1:-1;4954:23:87;;-1:-1:-1;1193:18:91;;4954:28:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;4993:7:87;-1:-1:-1;4993:7:87;;-1:-1:-1;5001:20:87;;-1:-1:-1;5001:15:87;5019:2;5001:20;:::i;:::-;4993:29;;;;;;;;;;;;;1220:25:91;;1208:2;1193:18;;1074:177;4993:29:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4698:586::o;3728:284:18:-;3797:1;-1:-1:-1;;;;;3792:6:18;:1;-1:-1:-1;;;;;3792:6:18;;3788:217;;3820:44;;;;;15089:2:91;15071:21;;;15128:2;15108:18;;;15101:30;15167:34;15162:2;15147:18;;15140:62;-1:-1:-1;;;15233:2:91;15218:18;;15211:35;15278:3;15263:19;;14887:401;3820:44:18;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;2473:443::-;-1:-1:-1;;;;;;;;;;;3065:55:18;3148:16;2517:367;;2721:67;;;-1:-1:-1;;;;;;;;;;;2721:67:18;;;16253:51:91;;;-1:-1:-1;;;16320:18:91;;;16313:34;;;;2781:4:18;16363:18:91;;;16356:34;2555:11:18;;1712:64;2654:43;;16226:18:91;;2721:67:18;;;-1:-1:-1;;2721:67:18;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:18;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:18;2894:7;:14;;-1:-1:-1;;2894:14:18;;;;;2473:443::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;411:658:91;582:2;634:21;;;704:13;;607:18;;;726:22;;;553:4;;582:2;805:15;;;;779:2;764:18;;;553:4;848:195;862:6;859:1;856:13;848:195;;;927:13;;-1:-1:-1;;;;;923:39:91;911:52;;1018:15;;;;983:12;;;;959:1;877:9;848:195;;;-1:-1:-1;1060:3:91;;411:658;-1:-1:-1;;;;;;411:658:91:o;1256:1569::-;1460:4;1489:2;1529;1518:9;1514:18;1559:2;1548:9;1541:21;1582:6;1617;1611:13;1648:6;1640;1633:22;1674:2;1664:12;;1707:2;1696:9;1692:18;1685:25;;1769:2;1759:6;1756:1;1752:14;1741:9;1737:30;1733:39;1807:2;1799:6;1795:15;1828:1;1849;1859:937;1875:6;1870:3;1867:15;1859:937;;;1944:22;;;-1:-1:-1;;1940:36:91;1928:49;;2000:13;;2087:9;;-1:-1:-1;;;;;2083:35:91;2068:51;;2158:11;;2152:18;2190:15;;;2183:27;;;2271:19;;2040:15;;;2303:24;;;2393:21;;;;2438:1;;2361:2;2349:15;;;2452:236;2468:8;2463:3;2460:17;2452:236;;;2549:15;;-1:-1:-1;;;;;;2545:42:91;2531:57;;2657:17;;;;2496:1;2487:11;;;;;2614:14;;;;2452:236;;;-1:-1:-1;2774:12:91;;;;2711:5;-1:-1:-1;;;2739:15:91;;;;1901:1;1892:11;1859:937;;;-1:-1:-1;2813:6:91;;1256:1569;-1:-1:-1;;;;;;;;;1256:1569:91:o;3048:250::-;3133:1;3143:113;3157:6;3154:1;3151:13;3143:113;;;3233:11;;;3227:18;3214:11;;;3207:39;3179:2;3172:10;3143:113;;;-1:-1:-1;;3290:1:91;3272:16;;3265:27;3048:250::o;3303:271::-;3345:3;3383:5;3377:12;3410:6;3405:3;3398:19;3426:76;3495:6;3488:4;3483:3;3479:14;3472:4;3465:5;3461:16;3426:76;:::i;:::-;3556:2;3535:15;-1:-1:-1;;3531:29:91;3522:39;;;;3563:4;3518:50;;3303:271;-1:-1:-1;;3303:271:91:o;3579:803::-;3741:4;3770:2;3810;3799:9;3795:18;3840:2;3829:9;3822:21;3863:6;3898;3892:13;3929:6;3921;3914:22;3967:2;3956:9;3952:18;3945:25;;4029:2;4019:6;4016:1;4012:14;4001:9;3997:30;3993:39;3979:53;;4067:2;4059:6;4055:15;4088:1;4098:255;4112:6;4109:1;4106:13;4098:255;;;4205:2;4201:7;4189:9;4181:6;4177:22;4173:36;4168:3;4161:49;4233:40;4266:6;4257;4251:13;4233:40;:::i;:::-;4223:50;-1:-1:-1;4331:12:91;;;;4296:15;;;;4134:1;4127:9;4098:255;;;-1:-1:-1;4370:6:91;;3579:803;-1:-1:-1;;;;;;;3579:803:91:o;4803:220::-;4952:2;4941:9;4934:21;4915:4;4972:45;5013:2;5002:9;4998:18;4990:6;4972:45;:::i;:::-;4964:53;4803:220;-1:-1:-1;;;4803:220:91:o;5427:184::-;5497:6;5550:2;5538:9;5529:7;5525:23;5521:32;5518:52;;;5566:1;5563;5556:12;5518:52;-1:-1:-1;5589:16:91;;5427:184;-1:-1:-1;5427:184:91:o;5616:380::-;5695:1;5691:12;;;;5738;;;5759:61;;5813:4;5805:6;5801:17;5791:27;;5759:61;5866:2;5858:6;5855:14;5835:18;5832:38;5829:161;;5912:10;5907:3;5903:20;5900:1;5893:31;5947:4;5944:1;5937:15;5975:4;5972:1;5965:15;5829:161;;5616:380;;;:::o;6127:1296::-;6301:2;6290:9;6283:21;6264:4;6324:1;6357:6;6351:13;6387:3;6409:1;6437:9;6433:2;6429:18;6419:28;;6497:2;6486:9;6482:18;6519;6509:61;;6563:4;6555:6;6551:17;6541:27;;6509:61;6589:2;6637;6629:6;6626:14;6606:18;6603:38;6600:165;;-1:-1:-1;;;6664:33:91;;6720:4;6717:1;6710:15;6750:4;6671:3;6738:17;6600:165;6847:2;6832:18;;343:19;;;386:14;;;6875:18;6902:128;;;;7044:1;7039:315;;;;6868:486;;6902:128;-1:-1:-1;;6935:24:91;;6923:37;;7003:14;;6996:22;6993:1;6989:30;6980:40;;;-1:-1:-1;6902:128:91;;7039:315;6074:1;6067:14;;;6111:4;6098:18;;7134:1;7148:165;7162:6;7159:1;7156:13;7148:165;;;7240:14;;7227:11;;;7220:35;7283:16;;;;7177:10;;7148:165;;;7333:11;;;-1:-1:-1;;6868:486:91;-1:-1:-1;;7390:18:91;;;;7383:34;;;;-1:-1:-1;7371:3:91;;6127:1296;-1:-1:-1;;;;;6127:1296:91:o;7618:127::-;7679:10;7674:3;7670:20;7667:1;7660:31;7710:4;7707:1;7700:15;7734:4;7731:1;7724:15;7750:139;-1:-1:-1;;;;;7833:31:91;;7823:42;;7813:70;;7879:1;7876;7869:12;7894:154;7981:13;;8003:39;7981:13;8003:39;:::i;8053:1145::-;8156:6;8187:2;8230;8218:9;8209:7;8205:23;8201:32;8198:52;;;8246:1;8243;8236:12;8198:52;8279:9;8273:16;8308:18;8349:2;8341:6;8338:14;8335:34;;;8365:1;8362;8355:12;8335:34;8403:6;8392:9;8388:22;8378:32;;8448:7;8441:4;8437:2;8433:13;8429:27;8419:55;;8470:1;8467;8460:12;8419:55;8499:2;8493:9;8521:2;8517;8514:10;8511:36;;;8527:18;;:::i;:::-;8573:2;8570:1;8566:10;8605:2;8599:9;8668:2;8664:7;8659:2;8655;8651:11;8647:25;8639:6;8635:38;8723:6;8711:10;8708:22;8703:2;8691:10;8688:18;8685:46;8682:72;;;8734:18;;:::i;:::-;8770:2;8763:22;8820:18;;;8854:15;;;;-1:-1:-1;8896:11:91;;;8892:20;;;8924:19;;;8921:39;;;8956:1;8953;8946:12;8921:39;8980:11;;;;9000:167;9016:6;9011:3;9008:15;9000:167;;;9082:42;9120:3;9082:42;:::i;:::-;9070:55;;9033:12;;;;9145;;;;9000:167;;;9186:6;8053:1145;-1:-1:-1;;;;;;;;8053:1145:91:o;9203:127::-;9264:10;9259:3;9255:20;9252:1;9245:31;9295:4;9292:1;9285:15;9319:4;9316:1;9309:15;9836:275;9922:6;9975:2;9963:9;9954:7;9950:23;9946:32;9943:52;;;9991:1;9988;9981:12;9943:52;10023:9;10017:16;10042:39;10075:5;10042:39;:::i;10693:277::-;10760:6;10813:2;10801:9;10792:7;10788:23;10784:32;10781:52;;;10829:1;10826;10819:12;10781:52;10861:9;10855:16;10914:5;10907:13;10900:21;10893:5;10890:32;10880:60;;10936:1;10933;10926:12;11165:222;11230:9;;;11251:10;;;11248:133;;;11303:10;11298:3;11294:20;11291:1;11284:31;11338:4;11335:1;11328:15;11366:4;11363:1;11356:15;11248:133;11165:222;;;;:::o;11671:384::-;-1:-1:-1;;;;;;11856:33:91;;11844:46;;11913:13;;11826:3;;11935:74;11913:13;11998:1;11989:11;;11982:4;11970:17;;11935:74;:::i;:::-;12029:16;;;;12047:1;12025:24;;11671:384;-1:-1:-1;;;11671:384:91:o;12060:287::-;12189:3;12227:6;12221:13;12243:66;12302:6;12297:3;12290:4;12282:6;12278:17;12243:66;:::i;:::-;12325:16;;;;;12060:287;-1:-1:-1;;12060:287:91:o;14017:348::-;14247:2;14236:9;14229:21;14210:4;14267:49;14312:2;14301:9;14297:18;13930:2;13918:15;;-1:-1:-1;;;13958:4:91;13949:14;;13942:36;14003:2;13994:12;;13853:159;14267:49;14259:57;;14352:6;14347:2;14336:9;14332:18;14325:34;14017:348;;;;:::o;14534:::-;14764:2;14753:9;14746:21;14727:4;14784:49;14829:2;14818:9;14814:18;14447:2;14435:15;;-1:-1:-1;;;14475:4:91;14466:14;;14459:36;14520:2;14511:12;;14370:159;15293:374;15523:2;15512:9;15505:21;15486:4;15543:49;15588:2;15577:9;15573:18;13930:2;13918:15;;-1:-1:-1;;;13958:4:91;13949:14;;13942:36;14003:2;13994:12;;13853:159;15543:49;-1:-1:-1;;;;;15628:32:91;;;;15623:2;15608:18;;;;15601:60;;;;-1:-1:-1;15535:57:91;15293:374::o;15672:::-;15902:2;15891:9;15884:21;15865:4;15922:49;15967:2;15956:9;15952:18;14447:2;14435:15;;-1:-1:-1;;;14475:4:91;14466:14;;14459:36;14520:2;14511:12;;14370:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BLOCK_NUM()": "2aaf4f01",
    "IS_TEST()": "fa7626d4",
    "SEPOLIA_RPC_URL()": "d994832b",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "pool()": "16f0115b",
    "rewardsToken()": "d1af0c7d",
    "sepoliaFork()": "c09370a3",
    "setUp()": "0a9254e4",
    "stakingToken()": "72f702f3",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_P_Deployment()": "d82e3ad4",
    "test_P_earned()": "3f2efa05",
    "test_P_getBalanceOfContract()": "0c4de8ba",
    "test_P_getReward()": "0fc3a55f",
    "test_P_lastTimeRewardApplicable()": "b6169f23",
    "test_P_notifyRewardAmount()": "bd767065",
    "test_P_resetToken()": "5e0a7e9b",
    "test_P_rewardPerToken()": "c1f83bb3",
    "test_P_setRewardsDuraton()": "51427b73",
    "test_P_stake()": "095b683e",
    "test_P_withdraw()": "92244649",
    "test_P_withdrawRewardToken()": "e5371558"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCK_NUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SEPOLIA_RPC_URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract StakingRewards\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract LPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sepoliaFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract FT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_Deployment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_earned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_getBalanceOfContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_lastTimeRewardApplicable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_resetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_rewardPerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_setRewardsDuraton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_P_withdrawRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/Pool.t.sol\":\"PoolTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/FT.sol\":{\"keccak256\":\"0xa9b1ff344499cfc532831b07ccb95d4cbb8c434a363d257919d1fa12062d02d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3689d471c3983bd264a37c8e58acfe1846c47181498ee19c54827a352f2078\",\"dweb:/ipfs/QmbY4cwoxcRPBvuGGiJkFxGvWJ8rxiqumxzGhu3kRWwEwz\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xac7585039feaef22856163f4c9ef4b90c53ee9a745aad73fa0a40190db2fc9b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a38892684788cb5665efbcd0cce6eb0027b2b641b9c0e87a8169e31f370842f\",\"dweb:/ipfs/QmSS6JFiVmemuQ7qkar7vQcNqRpQ4RTrVjA8cuaABmJZHg\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x11bfc1ef8356abd6ea2d58afc147fd31e8b2a9080e99d21f806d8d4c42aac95a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3d843ad201c5764e5f6dce38fcff90186594836bc49caa5c01fa68b38c0402f\",\"dweb:/ipfs/Qmf4YZn1JeKRDPD6Ma6HgzxX7Bpe7JbWNSE5u3GKC6vCNx\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x506f650691e48165a1afadf172babaf47a70f7f41769bdeb2a4446d695937e4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aea435452f08f36db6a87cf93240d598fcb2ed68d718dd8f5d3d52abc3480303\",\"dweb:/ipfs/QmWotABEdbgzd9MrvbzAt8g6bcFn5hGWzbvQSN33JL36ta\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x9b33a088ea3a9388fa24ecf6982eafa1934a3725b742b79d72d9b399e688ec72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d88cccdc5231df4cdcdf3668f18afa39853e5634f0d872a76939b880c9ec7f\",\"dweb:/ipfs/QmUerWoYEDc4XoogRvkPkSFnnx6YE42jsxGkXffzSU6D9A\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xff81e4317ee73c2da1de7d6923ec3ef3ccce5caa5311c5c40be7db6491aed9a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c3428e58ec9c686122dc929e15a176111e61559c917642cd8383ed9b8d0b3dc\",\"dweb:/ipfs/QmfWAgNfTnzoKVWTtH9mWdMDw6SPHUZpAAud2irxPuRur3\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x65fd0eeda28da592bf035912ab236b353a1f2b93c4372d2f48370e075bea6dc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db136c28bc3f1c73fc581028a18ef94d05aa5ec013396c4a0fde529ceb782139\",\"dweb:/ipfs/QmTAe7RzMAokM9WyifonX1rLgAfCP9r1Z1EC1JgyyAiybX\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x5a0b30c49be6f9380a2cee0f227b51a984f8b75f6e28e28560eee14d1f1bc681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f1b6aa8fa11d044a8a1ed92dee3a8c1e82c8d955972fb16dcd9a829d4d5ddd\",\"dweb:/ipfs/QmPhgwgED3nZioET7kuK1xQfQrnuzKjtKyiH6YaCAiFHNd\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x94403be0e45ff8f5721b2a43e400b6e2bf3e47b186ba8496661fb53657193857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1064aac5968b5a1cfbdff18320f84cd408cce84bcfcb3897c26ac51668c3d6db\",\"dweb:/ipfs/QmZ7kDxWbREfafNuQkZGn2ktmBZ5Nv6ddbg9tocZzeEXNK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x15b780f5e8f623e3a774a8c48ee9490f7e2732e43637bb6d0e0b0342f5af3c79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33762d442491c85b97e3d6a81002315b07bffc77031b2275184c3ad2c632dabc\",\"dweb:/ipfs/QmRsLaKrF2PXUTGXjvikpJb8uUjusLPmkkq7GNYDUXifTC\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x9a5500f0c1af7353726c0974bf693c1791473aa98f5b4f82ef377c9603aa39dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fb35abfd696cf75cf3e625a8ba571df4323abfd075f658780dee0e4d9dc9343\",\"dweb:/ipfs/QmbhAfSTm8n1QQtkZVgdSixQjQN9sdVWaqSVpmMA9V4Lqv\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x3a29812f9a9d479d6a5fc73c2003c1ca5cbcf56495ecbfd9ae74843d98dd6937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ea91ff51110144a3b897bfaccd57be5c1f3fe163aa999bdb564aa7ef652040b\",\"dweb:/ipfs/QmZpL7rxcCJmdFqijEQBW2UGdBJ85DCUkE339J912BfeT5\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/foundry/Pool.t.sol\":{\"keccak256\":\"0x6aeea6a5901d3f938123aa140eb02f94a4f71fe1d735290fcf6173d65bda655f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e4d7b77639730caa9227b29ef270b1d5c08671a254981d62f8357786c215b3\",\"dweb:/ipfs/QmZjCMMQjCvLmWoVoiSNqNNR5q43PWtH7bn7UbHFU4AXr7\"]},\"test/foundry/utils/Utils.sol\":{\"keccak256\":\"0xc0c0d65a65402a6a673dd8c2d89825dd85a8a46fc190bf626f4e3266447a902f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fce8d7dc55740f1e0af52f20beea22d7babf38bd03c15c7e0738f45702999291\",\"dweb:/ipfs/QmSsMVTXBCdEbApY9LJkHDMDZzyhsaJ5zQ4oPwcGbtfjnf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BLOCK_NUM",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SEPOLIA_RPC_URL",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "contract StakingRewards",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsToken",
          "outputs": [
            {
              "internalType": "contract LPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sepoliaFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingToken",
          "outputs": [
            {
              "internalType": "contract FT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_Deployment"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_earned"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_getBalanceOfContract"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_getReward"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_lastTimeRewardApplicable"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_notifyRewardAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_resetToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_rewardPerToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_setRewardsDuraton"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_stake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_P_withdrawRewardToken"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/Pool.t.sol": "PoolTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/FT.sol": {
        "keccak256": "0xa9b1ff344499cfc532831b07ccb95d4cbb8c434a363d257919d1fa12062d02d0",
        "urls": [
          "bzz-raw://3b3689d471c3983bd264a37c8e58acfe1846c47181498ee19c54827a352f2078",
          "dweb:/ipfs/QmbY4cwoxcRPBvuGGiJkFxGvWJ8rxiqumxzGhu3kRWwEwz"
        ],
        "license": "MIT"
      },
      "contracts/LPToken.sol": {
        "keccak256": "0xac7585039feaef22856163f4c9ef4b90c53ee9a745aad73fa0a40190db2fc9b0",
        "urls": [
          "bzz-raw://0a38892684788cb5665efbcd0cce6eb0027b2b641b9c0e87a8169e31f370842f",
          "dweb:/ipfs/QmSS6JFiVmemuQ7qkar7vQcNqRpQ4RTrVjA8cuaABmJZHg"
        ],
        "license": "MIT"
      },
      "contracts/Pool.sol": {
        "keccak256": "0x11bfc1ef8356abd6ea2d58afc147fd31e8b2a9080e99d21f806d8d4c42aac95a",
        "urls": [
          "bzz-raw://b3d843ad201c5764e5f6dce38fcff90186594836bc49caa5c01fa68b38c0402f",
          "dweb:/ipfs/Qmf4YZn1JeKRDPD6Ma6HgzxX7Bpe7JbWNSE5u3GKC6vCNx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x506f650691e48165a1afadf172babaf47a70f7f41769bdeb2a4446d695937e4d",
        "urls": [
          "bzz-raw://aea435452f08f36db6a87cf93240d598fcb2ed68d718dd8f5d3d52abc3480303",
          "dweb:/ipfs/QmWotABEdbgzd9MrvbzAt8g6bcFn5hGWzbvQSN33JL36ta"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x9b33a088ea3a9388fa24ecf6982eafa1934a3725b742b79d72d9b399e688ec72",
        "urls": [
          "bzz-raw://22d88cccdc5231df4cdcdf3668f18afa39853e5634f0d872a76939b880c9ec7f",
          "dweb:/ipfs/QmUerWoYEDc4XoogRvkPkSFnnx6YE42jsxGkXffzSU6D9A"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xff81e4317ee73c2da1de7d6923ec3ef3ccce5caa5311c5c40be7db6491aed9a1",
        "urls": [
          "bzz-raw://4c3428e58ec9c686122dc929e15a176111e61559c917642cd8383ed9b8d0b3dc",
          "dweb:/ipfs/QmfWAgNfTnzoKVWTtH9mWdMDw6SPHUZpAAud2irxPuRur3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x65fd0eeda28da592bf035912ab236b353a1f2b93c4372d2f48370e075bea6dc2",
        "urls": [
          "bzz-raw://db136c28bc3f1c73fc581028a18ef94d05aa5ec013396c4a0fde529ceb782139",
          "dweb:/ipfs/QmTAe7RzMAokM9WyifonX1rLgAfCP9r1Z1EC1JgyyAiybX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x5a0b30c49be6f9380a2cee0f227b51a984f8b75f6e28e28560eee14d1f1bc681",
        "urls": [
          "bzz-raw://e2f1b6aa8fa11d044a8a1ed92dee3a8c1e82c8d955972fb16dcd9a829d4d5ddd",
          "dweb:/ipfs/QmPhgwgED3nZioET7kuK1xQfQrnuzKjtKyiH6YaCAiFHNd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x94403be0e45ff8f5721b2a43e400b6e2bf3e47b186ba8496661fb53657193857",
        "urls": [
          "bzz-raw://1064aac5968b5a1cfbdff18320f84cd408cce84bcfcb3897c26ac51668c3d6db",
          "dweb:/ipfs/QmZ7kDxWbREfafNuQkZGn2ktmBZ5Nv6ddbg9tocZzeEXNK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x15b780f5e8f623e3a774a8c48ee9490f7e2732e43637bb6d0e0b0342f5af3c79",
        "urls": [
          "bzz-raw://33762d442491c85b97e3d6a81002315b07bffc77031b2275184c3ad2c632dabc",
          "dweb:/ipfs/QmRsLaKrF2PXUTGXjvikpJb8uUjusLPmkkq7GNYDUXifTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x9a5500f0c1af7353726c0974bf693c1791473aa98f5b4f82ef377c9603aa39dd",
        "urls": [
          "bzz-raw://6fb35abfd696cf75cf3e625a8ba571df4323abfd075f658780dee0e4d9dc9343",
          "dweb:/ipfs/QmbhAfSTm8n1QQtkZVgdSixQjQN9sdVWaqSVpmMA9V4Lqv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x3a29812f9a9d479d6a5fc73c2003c1ca5cbcf56495ecbfd9ae74843d98dd6937",
        "urls": [
          "bzz-raw://1ea91ff51110144a3b897bfaccd57be5c1f3fe163aa999bdb564aa7ef652040b",
          "dweb:/ipfs/QmZpL7rxcCJmdFqijEQBW2UGdBJ85DCUkE339J912BfeT5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/foundry/Pool.t.sol": {
        "keccak256": "0x6aeea6a5901d3f938123aa140eb02f94a4f71fe1d735290fcf6173d65bda655f",
        "urls": [
          "bzz-raw://81e4d7b77639730caa9227b29ef270b1d5c08671a254981d62f8357786c215b3",
          "dweb:/ipfs/QmZjCMMQjCvLmWoVoiSNqNNR5q43PWtH7bn7UbHFU4AXr7"
        ],
        "license": "MIT"
      },
      "test/foundry/utils/Utils.sol": {
        "keccak256": "0xc0c0d65a65402a6a673dd8c2d89825dd85a8a46fc190bf626f4e3266447a902f",
        "urls": [
          "bzz-raw://fce8d7dc55740f1e0af52f20beea22d7babf38bd03c15c7e0738f45702999291",
          "dweb:/ipfs/QmSsMVTXBCdEbApY9LJkHDMDZzyhsaJ5zQ4oPwcGbtfjnf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/Pool.t.sol",
    "id": 44730,
    "exportedSymbols": {
      "Context": [
        39953
      ],
      "DSTest": [
        6144
      ],
      "ERC20": [
        36937
      ],
      "FT": [
        381
      ],
      "IERC20": [
        37015
      ],
      "IERC20Metadata": [
        38318
      ],
      "LPToken": [
        1225
      ],
      "Ownable": [
        36112
      ],
      "PoolTest": [
        44729
      ],
      "StakingRewards": [
        3484
      ],
      "StdAssertions": [
        7637
      ],
      "StdChains": [
        8331
      ],
      "StdCheats": [
        10743
      ],
      "StdInvariant": [
        11033
      ],
      "StdStorage": [
        11783
      ],
      "StdStyle": [
        14427
      ],
      "StdUtils": [
        15275
      ],
      "Test": [
        15324
      ],
      "TestBase": [
        6210
      ],
      "Utils": [
        45062
      ],
      "Vm": [
        16830
      ],
      "console": [
        24894
      ],
      "console2": [
        33019
      ],
      "stdError": [
        10809
      ],
      "stdJson": [
        11609
      ],
      "stdMath": [
        11751
      ],
      "stdStorage": [
        13216
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:5254:87",
    "nodes": [
      {
        "id": 44086,
        "nodeType": "PragmaDirective",
        "src": "35:24:87",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 44087,
        "nodeType": "ImportDirective",
        "src": "63:28:87",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44730,
        "sourceUnit": 15325,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44089,
        "nodeType": "ImportDirective",
        "src": "93:40:87",
        "nodes": [],
        "absolutePath": "test/foundry/utils/Utils.sol",
        "file": "./utils/Utils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44730,
        "sourceUnit": 45063,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44088,
              "name": "Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45062,
              "src": "101:5:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44090,
        "nodeType": "ImportDirective",
        "src": "135:32:87",
        "nodes": [],
        "absolutePath": "contracts/FT.sol",
        "file": "../../contracts/FT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44730,
        "sourceUnit": 382,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44091,
        "nodeType": "ImportDirective",
        "src": "169:37:87",
        "nodes": [],
        "absolutePath": "contracts/LPToken.sol",
        "file": "../../contracts/LPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44730,
        "sourceUnit": 1226,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44092,
        "nodeType": "ImportDirective",
        "src": "208:34:87",
        "nodes": [],
        "absolutePath": "contracts/Pool.sol",
        "file": "../../contracts/Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44730,
        "sourceUnit": 3485,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44729,
        "nodeType": "ContractDefinition",
        "src": "246:5041:87",
        "nodes": [
          {
            "id": 44097,
            "nodeType": "VariableDeclaration",
            "src": "279:26:87",
            "nodes": [],
            "constant": false,
            "functionSelector": "16f0115b",
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "301:4:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingRewards_$3484",
              "typeString": "contract StakingRewards"
            },
            "typeName": {
              "id": 44096,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44095,
                "name": "StakingRewards",
                "nameLocations": [
                  "279:14:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3484,
                "src": "279:14:87"
              },
              "referencedDeclaration": 3484,
              "src": "279:14:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingRewards_$3484",
                "typeString": "contract StakingRewards"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44100,
            "nodeType": "VariableDeclaration",
            "src": "312:22:87",
            "nodes": [],
            "constant": false,
            "functionSelector": "72f702f3",
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "322:12:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FT_$381",
              "typeString": "contract FT"
            },
            "typeName": {
              "id": 44099,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44098,
                "name": "FT",
                "nameLocations": [
                  "312:2:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 381,
                "src": "312:2:87"
              },
              "referencedDeclaration": 381,
              "src": "312:2:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FT_$381",
                "typeString": "contract FT"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44103,
            "nodeType": "VariableDeclaration",
            "src": "341:27:87",
            "nodes": [],
            "constant": false,
            "functionSelector": "d1af0c7d",
            "mutability": "mutable",
            "name": "rewardsToken",
            "nameLocation": "356:12:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LPToken_$1225",
              "typeString": "contract LPToken"
            },
            "typeName": {
              "id": 44102,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44101,
                "name": "LPToken",
                "nameLocations": [
                  "341:7:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1225,
                "src": "341:7:87"
              },
              "referencedDeclaration": 1225,
              "src": "341:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LPToken_$1225",
                "typeString": "contract LPToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44106,
            "nodeType": "VariableDeclaration",
            "src": "377:11:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "383:5:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Utils_$45062",
              "typeString": "contract Utils"
            },
            "typeName": {
              "id": 44105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44104,
                "name": "Utils",
                "nameLocations": [
                  "377:5:87"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45062,
                "src": "377:5:87"
              },
              "referencedDeclaration": 45062,
              "src": "377:5:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$45062",
                "typeString": "contract Utils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44109,
            "nodeType": "VariableDeclaration",
            "src": "395:32:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "422:5:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 44107,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "395:15:87",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 44108,
              "nodeType": "ArrayTypeName",
              "src": "395:17:87",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44111,
            "nodeType": "VariableDeclaration",
            "src": "434:22:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "451:5:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44110,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:87",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44113,
            "nodeType": "VariableDeclaration",
            "src": "463:20:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "480:3:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44112,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:87",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44115,
            "nodeType": "VariableDeclaration",
            "src": "490:24:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "charlie",
            "nameLocation": "507:7:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "490:7:87",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44117,
            "nodeType": "VariableDeclaration",
            "src": "521:23:87",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dennis",
            "nameLocation": "538:6:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44116,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "521:7:87",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44119,
            "nodeType": "VariableDeclaration",
            "src": "553:26:87",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09370a3",
            "mutability": "mutable",
            "name": "sepoliaFork",
            "nameLocation": "568:11:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44118,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "553:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44125,
            "nodeType": "VariableDeclaration",
            "src": "586:63:87",
            "nodes": [],
            "constant": false,
            "functionSelector": "d994832b",
            "mutability": "mutable",
            "name": "SEPOLIA_RPC_URL",
            "nameLocation": "600:15:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44120,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "586:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5345504f4c49415f5250435f55524c",
                  "id": 44123,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "631:17:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_adb9a0f5ab061dfe1501109824810aa40a0c1c93da4bcc63c6d203e92d366ec1",
                    "typeString": "literal_string \"SEPOLIA_RPC_URL\""
                  },
                  "value": "SEPOLIA_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_adb9a0f5ab061dfe1501109824810aa40a0c1c93da4bcc63c6d203e92d366ec1",
                    "typeString": "literal_string \"SEPOLIA_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 44121,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6203,
                  "src": "618:2:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$16830",
                    "typeString": "contract Vm"
                  }
                },
                "id": 44122,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "621:9:87",
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 15459,
                "src": "618:12:87",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 44124,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "618:31:87",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44128,
            "nodeType": "VariableDeclaration",
            "src": "656:43:87",
            "nodes": [],
            "constant": true,
            "functionSelector": "2aaf4f01",
            "mutability": "constant",
            "name": "BLOCK_NUM",
            "nameLocation": "680:9:87",
            "scope": 44729,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44126,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "656:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33363438343230",
              "id": 44127,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "692:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3648420_by_1",
                "typeString": "int_const 3648420"
              },
              "value": "3648420"
            },
            "visibility": "public"
          },
          {
            "id": 44207,
            "nodeType": "FunctionDefinition",
            "src": "708:441:87",
            "nodes": [],
            "body": {
              "id": 44206,
              "nodeType": "Block",
              "src": "732:417:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44131,
                      "name": "sepoliaFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44119,
                      "src": "743:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44134,
                          "name": "SEPOLIA_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44125,
                          "src": "777:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 44135,
                          "name": "BLOCK_NUM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44128,
                          "src": "794:9:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 44132,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6203,
                          "src": "757:2:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$16830",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 44133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "760:16:87",
                        "memberName": "createSelectFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16716,
                        "src": "757:19:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) external returns (uint256)"
                        }
                      },
                      "id": 44136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "757:47:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "743:61:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44138,
                  "nodeType": "ExpressionStatement",
                  "src": "743:61:87"
                },
                {
                  "expression": {
                    "id": 44144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44139,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44106,
                      "src": "817:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$45062",
                        "typeString": "contract Utils"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "825:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Utils_$45062_$",
                          "typeString": "function () returns (contract Utils)"
                        },
                        "typeName": {
                          "id": 44141,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44140,
                            "name": "Utils",
                            "nameLocations": [
                              "829:5:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 45062,
                            "src": "829:5:87"
                          },
                          "referencedDeclaration": 45062,
                          "src": "829:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$45062",
                            "typeString": "contract Utils"
                          }
                        }
                      },
                      "id": 44143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "825:11:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$45062",
                        "typeString": "contract Utils"
                      }
                    },
                    "src": "817:19:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utils_$45062",
                      "typeString": "contract Utils"
                    }
                  },
                  "id": 44145,
                  "nodeType": "ExpressionStatement",
                  "src": "817:19:87"
                },
                {
                  "expression": {
                    "id": 44151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44146,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44109,
                      "src": "847:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 44149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "873:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "expression": {
                          "id": 44147,
                          "name": "utils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44106,
                          "src": "855:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$45062",
                            "typeString": "contract Utils"
                          }
                        },
                        "id": 44148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "861:11:87",
                        "memberName": "createUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45042,
                        "src": "855:17:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) external returns (address payable[] memory)"
                        }
                      },
                      "id": 44150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "855:20:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "847:28:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 44152,
                  "nodeType": "ExpressionStatement",
                  "src": "847:28:87"
                },
                {
                  "expression": {
                    "id": 44157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44153,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44111,
                      "src": "886:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 44154,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44109,
                        "src": "894:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 44156,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "894:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "886:16:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44158,
                  "nodeType": "ExpressionStatement",
                  "src": "886:16:87"
                },
                {
                  "expression": {
                    "id": 44163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44159,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44113,
                      "src": "913:3:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 44160,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44109,
                        "src": "919:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 44162,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "925:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "919:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "913:14:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44164,
                  "nodeType": "ExpressionStatement",
                  "src": "913:14:87"
                },
                {
                  "expression": {
                    "id": 44169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44165,
                      "name": "charlie",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44115,
                      "src": "938:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 44166,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44109,
                        "src": "948:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 44168,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 44167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "954:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "948:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "938:18:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44170,
                  "nodeType": "ExpressionStatement",
                  "src": "938:18:87"
                },
                {
                  "expression": {
                    "id": 44175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44171,
                      "name": "dennis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44117,
                      "src": "967:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 44172,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44109,
                        "src": "976:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 44174,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 44173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "976:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "967:17:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44176,
                  "nodeType": "ExpressionStatement",
                  "src": "967:17:87"
                },
                {
                  "expression": {
                    "id": 44182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44177,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44100,
                      "src": "997:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FT_$381",
                        "typeString": "contract FT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1012:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FT_$381_$",
                          "typeString": "function () returns (contract FT)"
                        },
                        "typeName": {
                          "id": 44179,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44178,
                            "name": "FT",
                            "nameLocations": [
                              "1016:2:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 381,
                            "src": "1016:2:87"
                          },
                          "referencedDeclaration": 381,
                          "src": "1016:2:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FT_$381",
                            "typeString": "contract FT"
                          }
                        }
                      },
                      "id": 44181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1012:8:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FT_$381",
                        "typeString": "contract FT"
                      }
                    },
                    "src": "997:23:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FT_$381",
                      "typeString": "contract FT"
                    }
                  },
                  "id": 44183,
                  "nodeType": "ExpressionStatement",
                  "src": "997:23:87"
                },
                {
                  "expression": {
                    "id": 44189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44184,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44103,
                      "src": "1031:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPToken_$1225",
                        "typeString": "contract LPToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1046:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LPToken_$1225_$",
                          "typeString": "function () returns (contract LPToken)"
                        },
                        "typeName": {
                          "id": 44186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44185,
                            "name": "LPToken",
                            "nameLocations": [
                              "1050:7:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1225,
                            "src": "1050:7:87"
                          },
                          "referencedDeclaration": 1225,
                          "src": "1050:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LPToken_$1225",
                            "typeString": "contract LPToken"
                          }
                        }
                      },
                      "id": 44188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1046:13:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPToken_$1225",
                        "typeString": "contract LPToken"
                      }
                    },
                    "src": "1031:28:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LPToken_$1225",
                      "typeString": "contract LPToken"
                    }
                  },
                  "id": 44190,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:28:87"
                },
                {
                  "expression": {
                    "id": 44204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44191,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44097,
                      "src": "1070:4:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingRewards_$3484",
                        "typeString": "contract StakingRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44197,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44100,
                              "src": "1104:12:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FT_$381",
                                "typeString": "contract FT"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FT_$381",
                                "typeString": "contract FT"
                              }
                            ],
                            "id": 44196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1096:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1096:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:21:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 44201,
                              "name": "rewardsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44103,
                              "src": "1127:12:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LPToken_$1225",
                                "typeString": "contract LPToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LPToken_$1225",
                                "typeString": "contract LPToken"
                              }
                            ],
                            "id": 44200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1119:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44199,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1119:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1119:21:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1077:18:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_StakingRewards_$3484_$",
                          "typeString": "function (address,address) returns (contract StakingRewards)"
                        },
                        "typeName": {
                          "id": 44193,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44192,
                            "name": "StakingRewards",
                            "nameLocations": [
                              "1081:14:87"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3484,
                            "src": "1081:14:87"
                          },
                          "referencedDeclaration": 3484,
                          "src": "1081:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingRewards_$3484",
                            "typeString": "contract StakingRewards"
                          }
                        }
                      },
                      "id": 44203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1077:64:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingRewards_$3484",
                        "typeString": "contract StakingRewards"
                      }
                    },
                    "src": "1070:71:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingRewards_$3484",
                      "typeString": "contract StakingRewards"
                    }
                  },
                  "id": 44205,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:71:87"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "717:5:87",
            "parameters": {
              "id": 44129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:2:87"
            },
            "returnParameters": {
              "id": 44130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44237,
            "nodeType": "FunctionDefinition",
            "src": "1157:188:87",
            "nodes": [],
            "body": {
              "id": 44236,
              "nodeType": "Block",
              "src": "1193:152:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44213,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44097,
                                "src": "1221:4:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingRewards_$3484",
                                  "typeString": "contract StakingRewards"
                                }
                              },
                              "id": 44214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1226:12:87",
                              "memberName": "stakingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3024,
                              "src": "1221:17:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$37015_$",
                                "typeString": "function () view external returns (contract IERC20)"
                              }
                            },
                            "id": 44215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1221:19:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 44212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1213:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1213:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1213:28:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44219,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44100,
                            "src": "1251:12:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FT_$381",
                              "typeString": "contract FT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FT_$381",
                              "typeString": "contract FT"
                            }
                          ],
                          "id": 44218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1243:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44217,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1243:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1243:21:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44210,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4173,
                      "src": "1204:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 44221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:61:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44222,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:61:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44226,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44097,
                                "src": "1293:4:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingRewards_$3484",
                                  "typeString": "contract StakingRewards"
                                }
                              },
                              "id": 44227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1298:12:87",
                              "memberName": "rewardsToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3027,
                              "src": "1293:17:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$37015_$",
                                "typeString": "function () view external returns (contract IERC20)"
                              }
                            },
                            "id": 44228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1293:19:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 44225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1285:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1285:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:28:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44232,
                            "name": "rewardsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44103,
                            "src": "1323:12:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPToken_$1225",
                              "typeString": "contract LPToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPToken_$1225",
                              "typeString": "contract LPToken"
                            }
                          ],
                          "id": 44231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1315:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1315:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1315:21:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44223,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4173,
                      "src": "1276:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 44234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:61:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44235,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:61:87"
                }
              ]
            },
            "functionSelector": "d82e3ad4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_Deployment",
            "nameLocation": "1166:17:87",
            "parameters": {
              "id": 44208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:2:87"
            },
            "returnParameters": {
              "id": 44209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44278,
            "nodeType": "FunctionDefinition",
            "src": "1353:355:87",
            "nodes": [],
            "body": {
              "id": 44277,
              "nodeType": "Block",
              "src": "1403:305:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44240,
                      "name": "updateVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44728,
                      "src": "1449:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1449:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44242,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:16:87"
                },
                {
                  "assignments": [
                    44244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44244,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "1486:4:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44277,
                      "src": "1478:12:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1478:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44248,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44245,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "1493:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1498:24:87",
                      "memberName": "lastTimeRewardApplicable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3140,
                      "src": "1493:29:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 44247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1493:31:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1478:46:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44250,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44244,
                        "src": "1544:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 44251,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1550:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 44252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1556:9:87",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1550:15:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44249,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "1535:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:31:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44254,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:31:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44258,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1587:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 44259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1593:9:87",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1587:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 44260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1605:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "1587:21:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44255,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "1579:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1582:4:87",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16380,
                      "src": "1579:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:30:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44263,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:30:87"
                },
                {
                  "expression": {
                    "id": 44268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44264,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44244,
                      "src": "1620:4:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 44265,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44097,
                          "src": "1627:4:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingRewards_$3484",
                            "typeString": "contract StakingRewards"
                          }
                        },
                        "id": 44266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1632:24:87",
                        "memberName": "lastTimeRewardApplicable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3140,
                        "src": "1627:29:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 44267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1627:31:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1620:38:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44269,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:38:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44271,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44244,
                        "src": "1678:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44272,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "1684:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1689:8:87",
                          "memberName": "finishAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3033,
                          "src": "1684:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1684:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44270,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "1669:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:31:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44276,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:31:87"
                }
              ]
            },
            "functionSelector": "b6169f23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_lastTimeRewardApplicable",
            "nameLocation": "1362:31:87",
            "parameters": {
              "id": 44238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:2:87"
            },
            "returnParameters": {
              "id": 44239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1403:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44307,
            "nodeType": "FunctionDefinition",
            "src": "1716:275:87",
            "nodes": [],
            "body": {
              "id": 44306,
              "nodeType": "Block",
              "src": "1756:235:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44282,
                      "mutability": "mutable",
                      "name": "perToken",
                      "nameLocation": "1775:8:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44306,
                      "src": "1767:16:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44281,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1767:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44286,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44283,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "1786:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1791:14:87",
                      "memberName": "rewardPerToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3168,
                      "src": "1786:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 44285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:21:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1767:40:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44288,
                        "name": "perToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44282,
                        "src": "1827:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1837:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 44287,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "1818:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:21:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44291,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:21:87"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44292,
                      "name": "updateVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44728,
                      "src": "1887:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44294,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:16:87"
                },
                {
                  "expression": {
                    "id": 44299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44295,
                      "name": "perToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44282,
                      "src": "1916:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 44296,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44097,
                          "src": "1927:4:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingRewards_$3484",
                            "typeString": "contract StakingRewards"
                          }
                        },
                        "id": 44297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1932:14:87",
                        "memberName": "rewardPerToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3168,
                        "src": "1927:19:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 44298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1927:21:87",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1916:32:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44300,
                  "nodeType": "ExpressionStatement",
                  "src": "1916:32:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44302,
                        "name": "perToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44282,
                        "src": "1968:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34653137",
                        "id": 44303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1978:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_400000000000000000_by_1",
                          "typeString": "int_const 400000000000000000"
                        },
                        "value": "4e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_400000000000000000_by_1",
                          "typeString": "int_const 400000000000000000"
                        }
                      ],
                      "id": 44301,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "1959:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:24:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44305,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:24:87"
                }
              ]
            },
            "functionSelector": "c1f83bb3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_rewardPerToken",
            "nameLocation": "1725:21:87",
            "parameters": {
              "id": 44279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1746:2:87"
            },
            "returnParameters": {
              "id": 44280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44366,
            "nodeType": "FunctionDefinition",
            "src": "1999:362:87",
            "nodes": [],
            "body": {
              "id": 44365,
              "nodeType": "Block",
              "src": "2035:326:87",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44312,
                      "mutability": "mutable",
                      "name": "newStakingToken",
                      "nameLocation": "2049:15:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44365,
                      "src": "2046:18:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FT_$381",
                        "typeString": "contract FT"
                      },
                      "typeName": {
                        "id": 44311,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44310,
                          "name": "FT",
                          "nameLocations": [
                            "2046:2:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 381,
                          "src": "2046:2:87"
                        },
                        "referencedDeclaration": 381,
                        "src": "2046:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FT_$381",
                          "typeString": "contract FT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44317,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2067:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FT_$381_$",
                        "typeString": "function () returns (contract FT)"
                      },
                      "typeName": {
                        "id": 44314,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44313,
                          "name": "FT",
                          "nameLocations": [
                            "2071:2:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 381,
                          "src": "2071:2:87"
                        },
                        "referencedDeclaration": 381,
                        "src": "2071:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FT_$381",
                          "typeString": "contract FT"
                        }
                      }
                    },
                    "id": 44316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:8:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FT_$381",
                      "typeString": "contract FT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2046:29:87"
                },
                {
                  "assignments": [
                    44320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44320,
                      "mutability": "mutable",
                      "name": "newRewardsToken",
                      "nameLocation": "2094:15:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44365,
                      "src": "2086:23:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPToken_$1225",
                        "typeString": "contract LPToken"
                      },
                      "typeName": {
                        "id": 44319,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44318,
                          "name": "LPToken",
                          "nameLocations": [
                            "2086:7:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1225,
                          "src": "2086:7:87"
                        },
                        "referencedDeclaration": 1225,
                        "src": "2086:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$1225",
                          "typeString": "contract LPToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44325,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2112:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LPToken_$1225_$",
                        "typeString": "function () returns (contract LPToken)"
                      },
                      "typeName": {
                        "id": 44322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44321,
                          "name": "LPToken",
                          "nameLocations": [
                            "2116:7:87"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1225,
                          "src": "2116:7:87"
                        },
                        "referencedDeclaration": 1225,
                        "src": "2116:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$1225",
                          "typeString": "contract LPToken"
                        }
                      }
                    },
                    "id": 44324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:13:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LPToken_$1225",
                      "typeString": "contract LPToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2086:39:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44331,
                            "name": "newStakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44312,
                            "src": "2160:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FT_$381",
                              "typeString": "contract FT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FT_$381",
                              "typeString": "contract FT"
                            }
                          ],
                          "id": 44330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2152:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2152:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2152:24:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44335,
                            "name": "newRewardsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44320,
                            "src": "2186:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPToken_$1225",
                              "typeString": "contract LPToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPToken_$1225",
                              "typeString": "contract LPToken"
                            }
                          ],
                          "id": 44334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2178:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2178:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2178:24:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44326,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "2136:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2141:10:87",
                      "memberName": "resetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3190,
                      "src": "2136:15:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 44337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:67:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44338,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:67:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44342,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44097,
                                "src": "2231:4:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingRewards_$3484",
                                  "typeString": "contract StakingRewards"
                                }
                              },
                              "id": 44343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2236:12:87",
                              "memberName": "stakingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3024,
                              "src": "2231:17:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$37015_$",
                                "typeString": "function () view external returns (contract IERC20)"
                              }
                            },
                            "id": 44344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2231:19:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 44341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2223:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2223:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2223:28:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44348,
                            "name": "newStakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44312,
                            "src": "2261:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FT_$381",
                              "typeString": "contract FT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FT_$381",
                              "typeString": "contract FT"
                            }
                          ],
                          "id": 44347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2253:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44346,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2253:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2253:24:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44339,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4173,
                      "src": "2214:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 44350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:64:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44351,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:64:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44355,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44097,
                                "src": "2306:4:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingRewards_$3484",
                                  "typeString": "contract StakingRewards"
                                }
                              },
                              "id": 44356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2311:12:87",
                              "memberName": "rewardsToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3027,
                              "src": "2306:17:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$37015_$",
                                "typeString": "function () view external returns (contract IERC20)"
                              }
                            },
                            "id": 44357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2306:19:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$37015",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 44354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2298:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2298:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:28:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44361,
                            "name": "newRewardsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44320,
                            "src": "2336:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPToken_$1225",
                              "typeString": "contract LPToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPToken_$1225",
                              "typeString": "contract LPToken"
                            }
                          ],
                          "id": 44360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2328:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2328:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2328:24:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44352,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4173,
                      "src": "2289:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 44363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:64:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44364,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:64:87"
                }
              ]
            },
            "functionSelector": "5e0a7e9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_resetToken",
            "nameLocation": "2008:17:87",
            "parameters": {
              "id": 44308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:2:87"
            },
            "returnParameters": {
              "id": 44309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2035:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44393,
            "nodeType": "FunctionDefinition",
            "src": "2369:170:87",
            "nodes": [],
            "body": {
              "id": 44392,
              "nodeType": "Block",
              "src": "2400:139:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44370,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2431:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44369,
                      "name": "mintAndApproveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44677,
                      "src": "2411:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:26:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44372,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:26:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44376,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2457:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44373,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "2448:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2451:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "2448:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2448:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44378,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 44382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2485:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 44379,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "2474:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2479:5:87",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3230,
                      "src": "2474:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44384,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:14:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44386,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "2508:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2513:11:87",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3049,
                          "src": "2508:16:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2508:18:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2528:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 44385,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "2499:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:32:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44391,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:32:87"
                }
              ]
            },
            "functionSelector": "095b683e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_stake",
            "nameLocation": "2378:12:87",
            "parameters": {
              "id": 44367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:2:87"
            },
            "returnParameters": {
              "id": 44368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2400:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44451,
            "nodeType": "FunctionDefinition",
            "src": "2547:304:87",
            "nodes": [],
            "body": {
              "id": 44450,
              "nodeType": "Block",
              "src": "2581:270:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44399,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2610:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2617:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44396,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44100,
                        "src": "2592:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FT_$381",
                          "typeString": "contract FT"
                        }
                      },
                      "id": 44398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2605:4:87",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 365,
                      "src": "2592:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2592:29:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44402,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:29:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44406,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2641:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44403,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "2632:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2635:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "2632:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44408,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44414,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "2687:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          ],
                          "id": 44413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2679:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2679:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2679:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2694:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 44409,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44100,
                        "src": "2658:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FT_$381",
                          "typeString": "contract FT"
                        }
                      },
                      "id": 44411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2671:7:87",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36517,
                      "src": "2658:20:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:39:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44418,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:39:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44422,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2717:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44419,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "2708:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2711:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "2708:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2708:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44424,
                  "nodeType": "ExpressionStatement",
                  "src": "2708:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 44428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2745:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 44425,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "2734:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2739:5:87",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3230,
                      "src": "2734:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44430,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:14:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44434,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2768:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44431,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "2759:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2762:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "2759:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44436,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 44440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2799:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "id": 44437,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "2785:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2790:8:87",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3266,
                      "src": "2785:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44442,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:16:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44444,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "2821:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2826:11:87",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3049,
                          "src": "2821:16:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2821:18:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 44447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2841:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 44443,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "2812:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:31:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44449,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:31:87"
                }
              ]
            },
            "functionSelector": "92244649",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_withdraw",
            "nameLocation": "2556:15:87",
            "parameters": {
              "id": 44394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2571:2:87"
            },
            "returnParameters": {
              "id": 44395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44470,
            "nodeType": "FunctionDefinition",
            "src": "2859:177:87",
            "nodes": [],
            "body": {
              "id": 44469,
              "nodeType": "Block",
              "src": "2891:145:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44454,
                      "name": "updateVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44728,
                      "src": "2937:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2937:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44456,
                  "nodeType": "ExpressionStatement",
                  "src": "2937:16:87"
                },
                {
                  "assignments": [
                    44458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44458,
                      "mutability": "mutable",
                      "name": "earn",
                      "nameLocation": "2974:4:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44469,
                      "src": "2966:12:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2966:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44463,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44461,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "2993:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44459,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "2981:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2986:6:87",
                      "memberName": "earned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3294,
                      "src": "2981:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:18:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2966:33:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44465,
                        "name": "earn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44458,
                        "src": "3019:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3430",
                        "id": 44466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3025:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 44464,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "3010:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3010:18:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44468,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:18:87"
                }
              ]
            },
            "functionSelector": "3f2efa05",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_earned",
            "nameLocation": "2868:13:87",
            "parameters": {
              "id": 44452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2881:2:87"
            },
            "returnParameters": {
              "id": 44453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2891:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44500,
            "nodeType": "FunctionDefinition",
            "src": "3044:248:87",
            "nodes": [],
            "body": {
              "id": 44499,
              "nodeType": "Block",
              "src": "3079:213:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44473,
                      "name": "updateVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44728,
                      "src": "3125:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44475,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:16:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44479,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "3161:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44476,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "3152:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3155:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "3152:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3152:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44481,
                  "nodeType": "ExpressionStatement",
                  "src": "3152:15:87"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44482,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "3178:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3183:9:87",
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3329,
                      "src": "3178:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 44485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44486,
                  "nodeType": "ExpressionStatement",
                  "src": "3178:16:87"
                },
                {
                  "assignments": [
                    44488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44488,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3213:7:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44499,
                      "src": "3205:15:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3205:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44493,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44491,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "3246:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44489,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44103,
                        "src": "3223:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$1225",
                          "typeString": "contract LPToken"
                        }
                      },
                      "id": 44490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3236:9:87",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36449,
                      "src": "3223:22:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:29:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3205:47:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44495,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44488,
                        "src": "3272:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3430",
                        "id": 44496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3281:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 44494,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "3263:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:21:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44498,
                  "nodeType": "ExpressionStatement",
                  "src": "3263:21:87"
                }
              ]
            },
            "functionSelector": "0fc3a55f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_getReward",
            "nameLocation": "3053:16:87",
            "parameters": {
              "id": 44471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3069:2:87"
            },
            "returnParameters": {
              "id": 44472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3079:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44517,
            "nodeType": "FunctionDefinition",
            "src": "3300:131:87",
            "nodes": [],
            "body": {
              "id": 44516,
              "nodeType": "Block",
              "src": "3343:88:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 44506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3378:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44503,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "3354:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3359:18:87",
                      "memberName": "setRewardsDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3349,
                      "src": "3354:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:28:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44508,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:28:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44510,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "3402:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3407:8:87",
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3031,
                          "src": "3402:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3402:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 44509,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "3393:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:30:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44515,
                  "nodeType": "ExpressionStatement",
                  "src": "3393:30:87"
                }
              ]
            },
            "functionSelector": "51427b73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_setRewardsDuraton",
            "nameLocation": "3309:24:87",
            "parameters": {
              "id": 44501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3333:2:87"
            },
            "returnParameters": {
              "id": 44502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3343:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44584,
            "nodeType": "FunctionDefinition",
            "src": "3439:457:87",
            "nodes": [],
            "body": {
              "id": 44583,
              "nodeType": "Block",
              "src": "3483:413:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530",
                        "id": 44523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3553:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "expression": {
                        "id": 44520,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "3529:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3534:18:87",
                      "memberName": "setRewardsDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3349,
                      "src": "3529:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3529:27:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44525,
                  "nodeType": "ExpressionStatement",
                  "src": "3529:27:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44531,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "3593:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          ],
                          "id": 44530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3585:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3585:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3585:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3600:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44526,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44103,
                        "src": "3567:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$1225",
                          "typeString": "contract LPToken"
                        }
                      },
                      "id": 44528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3580:4:87",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1209,
                      "src": "3567:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3567:38:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44535,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:38:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44537,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "3636:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44536,
                      "name": "mintAndApproveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44677,
                      "src": "3616:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:26:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44539,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:26:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44543,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "3662:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44540,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "3653:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3656:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "3653:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3653:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44545,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 44549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44546,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "3679:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3684:5:87",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3230,
                      "src": "3679:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44551,
                  "nodeType": "ExpressionStatement",
                  "src": "3679:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 44555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3731:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44552,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "3707:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3712:18:87",
                      "memberName": "notifyRewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3429,
                      "src": "3707:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:28:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44557,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:28:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44559,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "3755:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3760:10:87",
                          "memberName": "rewardRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3037,
                          "src": "3755:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3755:17:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3774:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 44558,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "3746:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3746:30:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44564,
                  "nodeType": "ExpressionStatement",
                  "src": "3746:30:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44566,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "3796:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3801:8:87",
                          "memberName": "finishAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3033,
                          "src": "3796:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3796:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44569,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3813:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 44570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3819:9:87",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3813:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 44571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3831:2:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "3813:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44565,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "3787:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:47:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44574,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:47:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44576,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "3854:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3859:9:87",
                          "memberName": "updatedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3035,
                          "src": "3854:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3854:16:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 44579,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3872:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 44580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3878:9:87",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3872:15:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44575,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "3845:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:43:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44582,
                  "nodeType": "ExpressionStatement",
                  "src": "3845:43:87"
                }
              ]
            },
            "functionSelector": "bd767065",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_notifyRewardAmount",
            "nameLocation": "3448:25:87",
            "parameters": {
              "id": 44518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:2:87"
            },
            "returnParameters": {
              "id": 44519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3483:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44602,
            "nodeType": "FunctionDefinition",
            "src": "3904:208:87",
            "nodes": [],
            "body": {
              "id": 44601,
              "nodeType": "Block",
              "src": "3950:162:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44587,
                      "name": "updateVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44728,
                      "src": "3996:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3996:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44589,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:16:87"
                },
                {
                  "assignments": [
                    44591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44591,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4033:7:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44601,
                      "src": "4025:15:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44590,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4025:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44595,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44592,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "4043:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4048:20:87",
                      "memberName": "getBalanceOfContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3460,
                      "src": "4043:25:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 44594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4043:27:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4025:45:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44597,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44591,
                        "src": "4090:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4099:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44596,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "4081:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4081:23:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44600,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:23:87"
                }
              ]
            },
            "functionSelector": "0c4de8ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_getBalanceOfContract",
            "nameLocation": "3913:27:87",
            "parameters": {
              "id": 44585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3940:2:87"
            },
            "returnParameters": {
              "id": 44586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44648,
            "nodeType": "FunctionDefinition",
            "src": "4120:388:87",
            "nodes": [],
            "body": {
              "id": 44647,
              "nodeType": "Block",
              "src": "4165:343:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44605,
                      "name": "updateVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44728,
                      "src": "4211:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:16:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44607,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:16:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7374696c6c2070726f6475637420726577617264546f6b656e",
                        "id": 44611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4256:27:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a00907bbc404f94e3aca1cdb51134ee0009d6b29a65c1a0bd0b7485dea0f779",
                          "typeString": "literal_string \"still product rewardToken\""
                        },
                        "value": "still product rewardToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2a00907bbc404f94e3aca1cdb51134ee0009d6b29a65c1a0bd0b7485dea0f779",
                          "typeString": "literal_string \"still product rewardToken\""
                        }
                      ],
                      "expression": {
                        "id": 44608,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "4240:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4243:12:87",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16484,
                      "src": "4240:15:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 44612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4240:44:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44613,
                  "nodeType": "ExpressionStatement",
                  "src": "4240:44:87"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44614,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "4295:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4300:19:87",
                      "memberName": "withdrawRewardToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3483,
                      "src": "4295:24:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 44617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:26:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44618,
                  "nodeType": "ExpressionStatement",
                  "src": "4295:26:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44622,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4342:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 44623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4348:9:87",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4342:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 44624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4360:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "4342:21:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44619,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "4334:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4337:4:87",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16380,
                      "src": "4334:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4334:30:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44627,
                  "nodeType": "ExpressionStatement",
                  "src": "4334:30:87"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44628,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "4375:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4380:19:87",
                      "memberName": "withdrawRewardToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3483,
                      "src": "4375:24:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 44631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4375:26:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44632,
                  "nodeType": "ExpressionStatement",
                  "src": "4375:26:87"
                },
                {
                  "assignments": [
                    44634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44634,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4420:7:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 44647,
                      "src": "4412:15:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4412:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44641,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44637,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "4453:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          },
                          "id": 44638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4458:5:87",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3029,
                          "src": "4453:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 44639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4453:12:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44635,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44103,
                        "src": "4430:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$1225",
                          "typeString": "contract LPToken"
                        }
                      },
                      "id": 44636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4443:9:87",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36449,
                      "src": "4430:22:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4430:36:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4412:54:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44643,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44634,
                        "src": "4486:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4495:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44642,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6338,
                        6363,
                        6376,
                        6392,
                        6434,
                        6476,
                        6518,
                        6555,
                        6592,
                        6629,
                        4173,
                        4198,
                        4228,
                        4253,
                        4312,
                        4337,
                        4367,
                        4392,
                        5865,
                        5900
                      ],
                      "referencedDeclaration": 4367,
                      "src": "4477:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:23:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44646,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:23:87"
                }
              ]
            },
            "functionSelector": "e5371558",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_P_withdrawRewardToken",
            "nameLocation": "4129:26:87",
            "parameters": {
              "id": 44603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4155:2:87"
            },
            "returnParameters": {
              "id": 44604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44677,
            "nodeType": "FunctionDefinition",
            "src": "4516:174:87",
            "nodes": [],
            "body": {
              "id": 44676,
              "nodeType": "Block",
              "src": "4567:123:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44656,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44650,
                        "src": "4596:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4602:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44653,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44100,
                        "src": "4578:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FT_$381",
                          "typeString": "contract FT"
                        }
                      },
                      "id": 44655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4591:4:87",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 365,
                      "src": "4578:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:28:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44659,
                  "nodeType": "ExpressionStatement",
                  "src": "4578:28:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44663,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44650,
                        "src": "4626:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44660,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "4617:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4620:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "4617:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:14:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44665,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:14:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44671,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "4671:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          ],
                          "id": 44670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4663:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4663:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4663:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44666,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44100,
                        "src": "4642:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FT_$381",
                          "typeString": "contract FT"
                        }
                      },
                      "id": 44668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4655:7:87",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36517,
                      "src": "4642:20:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4642:40:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44675,
                  "nodeType": "ExpressionStatement",
                  "src": "4642:40:87"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAndApproveToken",
            "nameLocation": "4525:19:87",
            "parameters": {
              "id": 44651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44650,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4553:4:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 44677,
                  "src": "4545:12:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4545:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4544:14:87"
            },
            "returnParameters": {
              "id": 44652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4567:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 44728,
            "nodeType": "FunctionDefinition",
            "src": "4698:586:87",
            "nodes": [],
            "body": {
              "id": 44727,
              "nodeType": "Block",
              "src": "4732:552:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530",
                        "id": 44683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4802:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "expression": {
                        "id": 44680,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "4778:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4783:18:87",
                      "memberName": "setRewardsDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3349,
                      "src": "4778:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:27:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44685,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:27:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44691,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44097,
                            "src": "4842:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingRewards_$3484",
                              "typeString": "contract StakingRewards"
                            }
                          ],
                          "id": 44690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4834:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4834:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4834:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4849:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44686,
                        "name": "rewardsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44103,
                        "src": "4816:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPToken_$1225",
                          "typeString": "contract LPToken"
                        }
                      },
                      "id": 44688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4829:4:87",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1209,
                      "src": "4816:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:38:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44695,
                  "nodeType": "ExpressionStatement",
                  "src": "4816:38:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44697,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "4885:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44696,
                      "name": "mintAndApproveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44677,
                      "src": "4865:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4865:26:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44699,
                  "nodeType": "ExpressionStatement",
                  "src": "4865:26:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44703,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44111,
                        "src": "4911:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44700,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "4902:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4905:5:87",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16443,
                      "src": "4902:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44705,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 44709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4939:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44706,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "4928:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4933:5:87",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3230,
                      "src": "4928:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4928:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44711,
                  "nodeType": "ExpressionStatement",
                  "src": "4928:15:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 44715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4978:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 44712,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44097,
                        "src": "4954:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingRewards_$3484",
                          "typeString": "contract StakingRewards"
                        }
                      },
                      "id": 44714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4959:18:87",
                      "memberName": "notifyRewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3429,
                      "src": "4954:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4954:28:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44717,
                  "nodeType": "ExpressionStatement",
                  "src": "4954:28:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44721,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5001:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 44722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5007:9:87",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5001:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 44723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5019:2:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "5001:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44718,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6203,
                        "src": "4993:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$16830",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4996:4:87",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16380,
                      "src": "4993:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4993:29:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44726,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:29:87"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateVariable",
            "nameLocation": "4707:14:87",
            "parameters": {
              "id": 44678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:2:87"
            },
            "returnParameters": {
              "id": 44679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4732:0:87"
            },
            "scope": 44729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44093,
              "name": "Test",
              "nameLocations": [
                "267:4:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15324,
              "src": "267:4:87"
            },
            "id": 44094,
            "nodeType": "InheritanceSpecifier",
            "src": "267:4:87"
          }
        ],
        "canonicalName": "PoolTest",
        "contractDependencies": [
          381,
          1225,
          3484,
          45062
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44729,
          15324,
          6210,
          6207,
          15275,
          11033,
          10743,
          10064,
          8331,
          7637,
          6144
        ],
        "name": "PoolTest",
        "nameLocation": "255:8:87",
        "scope": 44730,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 87
}